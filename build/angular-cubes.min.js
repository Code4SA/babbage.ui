/*! angular-cubes 2015-06-13 */
var ngCubes=angular.module("ngCubes",["ngCubes.templates"]),makeSignal=function(a){return"cubes_"+Math.random().toString(36).replace(/[^a-z]+/g,"")};ngCubes.filter("numeric",function(){return function(a){return numeral(a).format("0,0")}}),ngCubes.directive("cubes",["$http","$rootScope",function(a,b){return{restrict:"E",transclude:!0,scope:{slicer:"@",cube:"@",state:"=",changeState:"&"},templateUrl:"angular-cubes-templates/cubes.html",controller:function(c){var d=this,e=c.state||{},f=c.slicer.slice(),f=f.endsWith("/")?f.slice(0,f.length-1):f,f=f+"/cube/"+c.cube;d.dataUpdate=makeSignal(),d.stateUpdate=makeSignal(),d.modelUpdate=makeSignal(),d.init=function(){a.get(f+"/model").then(function(a){b.$broadcast(d.modelUpdate,a.data)})},d.getState=function(){return e},d.setState=function(a){e=a,b.$broadcast(d.stateUpdate,e),c.changeState&&c.changeState(e)},d.init()}}}]),ngCubes.directive("cubesPanel",["$rootScope",function(a){return{restrict:"EA",require:"^cubes",scope:{},templateUrl:"angular-cubes-templates/panel.html",link:function(b,c,d,e){var f=null,g={};a.$on(e.modelUpdate,function(a,b){f=b}),a.$on(e.dataUpdate,function(a,b,c){g=c})}}}]),ngCubes.directive("cubesTable",["$rootScope",function(a){return{restrict:"EA",require:"^cubes",scope:{drilldown:"="},templateUrl:"angular-cubes-templates/table.html",link:function(b,c,d,e){var f=null;b.columns=[],b.headers=[],b.table=[],a.$on(e.modelUpdate,function(a,b){f=b}),a.$on(e.dataUpdate,function(a,b,c){})}}}]),angular.module("ngCubes.templates",["angular-cubes-templates/cubes.html","angular-cubes-templates/panel.html","angular-cubes-templates/table.html","angular-cubes-templates/workspace.html"]),angular.module("angular-cubes-templates/cubes.html",[]).run(["$templateCache",function(a){a.put("angular-cubes-templates/cubes.html",'<div class="cubes-frame" ng-transclude>\n</div>\n')}]),angular.module("angular-cubes-templates/panel.html",[]).run(["$templateCache",function(a){a.put("angular-cubes-templates/panel.html","I'm the panel.\n")}]),angular.module("angular-cubes-templates/table.html",[]).run(["$templateCache",function(a){a.put("angular-cubes-templates/table.html",'<table class="table table-bordered table-condensed table-cubes">\n  <tr>\n    <th ng-repeat="h in headers" colspan="{{h.colspan}}">\n      {{h.label}}\n    </th>\n  </tr>\n  <tr>\n    <th ng-repeat="c in columns">\n      {{c.name}}\n    </th>\n  </tr>\n  <tr ng-repeat="row in table">\n    <td ng-repeat="c in columns" ng-class="c.type">\n      <span ng-if="c.type == \'numeric\'">\n        {{ row[c.column] | numeric }}\n      </span>\n      <span ng-if="c.type != \'numeric\'">\n        {{ row[c.column] }}\n      </span>\n    </td>\n  </tr>\n</table>\n\n{{data.total_cell_count}}\n')}]),angular.module("angular-cubes-templates/workspace.html",[]).run(["$templateCache",function(a){a.put("angular-cubes-templates/workspace.html",'<cubes slicer="{{slicer}}" cube="{{cube}}" state="state" state-change="updateState">\n  <div class="row">\n    <div class="col-md-9">\n      <cubes-table></cubes-table>\n    </div>\n    <div class="col-md-3">\n      <cubes-panel></cubes-panel>\n    </div>\n  </div>\n</cubes>\n')}]),ngCubes.directive("cubesWorkspace",["$location",function(a){return{restrict:"EA",scope:{slicer:"@",cube:"@"},templateUrl:"angular-cubes-templates/workspace.html",link:function(b,c,d,e){b.state={};var f=function(){b.state=a.search()};b.updateState=function(b){a.search(b)},f()}}}]);