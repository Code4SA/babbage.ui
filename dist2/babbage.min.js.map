{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///babbage.min.js","webpack:///webpack/bootstrap 6cf42be916a8fcebaa6d","webpack:///./src/index.js","webpack:///./src/api.js","webpack:///./src/app.js","webpack:///./src/babbage.js","webpack:///./src/chart.js","webpack:///./src/crosstab.js","webpack:///./src/facts.js","webpack:///./src/pager.js","webpack:///./src/panel.js","webpack:///./src/sankey.js","webpack:///./src/treemap.js","webpack:///./src/util.js","webpack:///./src/workspace.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","ngBabbage","$http","$q","slugifyFilter","cache","getUrl","endpoint","cube","path","api","slice","endsWith","length","getCached","url","angular","isDefined","get","getModel","then","res","model","data","refs","refKeys","refLabels","i","measures","measure","numeric","hideLabel","ref","aggregates","agg","di","dimensions","dim","ai","attributes","attr","nested","indexOf","dimension","label","name","key_attribute","label_attribute","getDimensionMembers","flush","ngBabbageGlobals","numberFormat","d3","format","categoryColors","colorScale","scale","ordinal","range","embedSite","window","location","href","split","lastSlash","lastIndexOf","embedLink","filter","val","fval","parseFloat","isNaN","Math","round","directive","$rootScope","$location","babbageApi","restrict","transclude","scope","state","update","templateUrl","controller","$scope","self","queryModel","init","$broadcast","subscribe","listener","$on","getState","isEmbedded","embed","setState","s","getApiUrl","size","element","height","width","document","documentElement","clientWidth","clientHeight","getSorts","sorts","order","asArray","parts","sort","direction","push","getSort","pushSort","unshift","mergeSorts","removeSorts","o","isObject","join","getQuery","q","drilldown","cut","page","pagesize","queryParams","k","isArray","params","require","chartType","link","attrs","babbageCtrl","queryLoaded","cutoffWarning","cutoff","getNames","names","concept","generateColumns","cells","category","grouping","value","columns","series","cell","field","index","maxLength","max","apply","map","r","j","query","dfd","queryResult","wrapper","querySelectorAll","w","colors","copy","groups","types","key","randomKey","select","style","c3","generate","bindto","color","_color","d","x","point","show","grid","focus","axis","type","tick","culling","fit","y","lines","total_cell_count","unsubscribe","event","addLabel","defaults","sortId","multiple","remove","VAL_KEY","POS_KEY","rows","table","concat","defaultAggregates","drilldowns","dd","matrix","row_headers","column_headers","row_keys","column_keys","pickValue","pickRefs","row_values","row_set","all_column_values","all_column_set","column_values","column_set","row_key","row","column_key","a","aggs","pagerCtx","fields","defaultFields","aq","prev","prev_idx","column","header","span","hide","total","total_fact_count","mea","$timeout","context","showPager","hasPrev","hasNext","pages","cur","num","$watch","e","current","parseInt","ceil","low","high","min","setPage","$element","axes","filterAttributes","filters","add","selected","splice","makeOptions","options","subLabel","sortKey","mi","sortOptions","b","localeCompare","makeAxes","available","active","isFunction","opt","makeFilterAttributes","cardinality_class","label_ref","getAttributeByRef","loadFilters","cuts","values","addFilter","removeFilter","idx","updateFilters","setFilter","item","f","isUndefined","mdl","$document","unit","margin","top","right","bottom","left","svg","group","source","target","aggregate","defaultAggregate","append","sourceRef","targetRef","aggregateRef","graph","nodes","links","objs","sourceScale","targetScale","forEach","sourceId","targetId","number","sankey","nodeWidth","nodePadding","layout","selectAll","enter","dy","text","node","positionNode","dx","treemap","div","tile","area","defaultArea","sticky","tileRef","areaRef","children","_area_fmt","_name","_percentage","summary","datum","html","on","transition","duration","background","rgb","darker","delay","String","prototype","searchString","position","subjectString","toString","undefined","lastIndex","setView","view","search","prepareEmbed","qs","opts","extend","encodeURIComponent"],"mappings":"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","file":"babbage.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Babbage\"] = factory();\n\telse\n\t\troot[\"Babbage\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Babbage\"] = factory();\n\telse\n\t\troot[\"Babbage\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(2);\n\t__webpack_require__(1);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\t__webpack_require__(5);\n\t__webpack_require__(6);\n\t__webpack_require__(7);\n\t__webpack_require__(8);\n\t__webpack_require__(9);\n\t__webpack_require__(10);\n\t__webpack_require__(11);\n\t__webpack_require__(12);\n\t\n\tmodule.exports = 'ngBabbage';\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.factory('babbageApi', ['$http', '$q', 'slugifyFilter', function ($http, $q, slugifyFilter) {\n\t  var cache = {};\n\t\n\t  var getUrl = function getUrl(endpoint, cube, path) {\n\t    var api = endpoint.slice(),\n\t        api = api.endsWith('/') ? api.slice(0, api.length - 1) : api,\n\t        api = api + '/cubes/' + cube + '/' + path;\n\t    return api;\n\t  };\n\t\n\t  var getCached = function getCached(url) {\n\t    if (!angular.isDefined(cache[url])) {\n\t      cache[url] = $http.get(url);\n\t    }\n\t    return cache[url];\n\t  };\n\t\n\t  var getModel = function getModel(endpoint, cube) {\n\t    return getCached(getUrl(endpoint, cube, 'model')).then(function (res) {\n\t      var model = res.data.model;\n\t      model.refs = {};\n\t      model.refKeys = {};\n\t      model.refLabels = {};\n\t\n\t      for (var i in model.measures) {\n\t        var measure = model.measures[i];\n\t        measure.numeric = true;\n\t        measure.hideLabel = true;\n\t        model.refs[measure.ref] = measure;\n\t      }\n\t\n\t      for (var i in model.aggregates) {\n\t        var agg = model.aggregates[i];\n\t        agg.numeric = true;\n\t        agg.hideLabel = true;\n\t        model.refs[agg.ref] = agg;\n\t      }\n\t\n\t      for (var di in model.dimensions) {\n\t        var dim = model.dimensions[di];\n\t        for (var ai in dim.attributes) {\n\t          var attr = dim.attributes[ai],\n\t              nested = attr.ref.indexOf('.') != -1;\n\t          attr.dimension = dim;\n\t          attr.hideLabel = slugifyFilter(attr.label) == slugifyFilter(dim.label);\n\t          model.refs[attr.ref] = attr;\n\t          model.refKeys[attr.ref] = nested ? dim.name + '.' + dim.key_attribute : attr.ref;\n\t          model.refLabels[attr.ref] = nested ? dim.name + '.' + dim.label_attribute : attr.ref;\n\t        }\n\t      }\n\t      return model;\n\t    });\n\t  };\n\t\n\t  var getDimensionMembers = function getDimensionMembers(endpoint, cube, dimension) {\n\t    return getCached(getUrl(endpoint, cube, 'members/' + dimension));\n\t  };\n\t\n\t  var flush = function flush() {\n\t    cache = {};\n\t  };\n\t\n\t  return {\n\t    getUrl: getUrl,\n\t    getModel: getModel,\n\t    getDimensionMembers: getDimensionMembers,\n\t    flush: flush\n\t  };\n\t}]);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar ngBabbage = angular.module('ngBabbage', ['ngBabbage.templates']);\n\t\n\tvar ngBabbageGlobals = ngBabbageGlobals || {};\n\tngBabbageGlobals.numberFormat = d3.format(\"0,000\");\n\tngBabbageGlobals.categoryColors = [\"#CF3D1E\", \"#F15623\", \"#F68B1F\", \"#FFC60B\", \"#DFCE21\", \"#BCD631\", \"#95C93D\", \"#48B85C\", \"#00833D\", \"#00B48D\", \"#60C4B1\", \"#27C4F4\", \"#478DCB\", \"#3E67B1\", \"#4251A3\", \"#59449B\", \"#6E3F7C\", \"#6A246D\", \"#8A4873\", \"#EB0080\", \"#EF58A0\", \"#C05A89\"];\n\tngBabbageGlobals.colorScale = d3.scale.ordinal().range(ngBabbageGlobals.categoryColors);\n\t\n\tif (!ngBabbageGlobals.embedSite) {\n\t  var url = window.location.href.split('#')[0],\n\t      lastSlash = url.lastIndexOf('/'),\n\t      lastSlash = lastSlash == -1 ? url.length : lastSlash;\n\t  ngBabbageGlobals.embedSite = url.slice(0, lastSlash);\n\t}\n\tngBabbageGlobals.embedLink = ngBabbageGlobals.embedSite + '/embed.html';\n\t\n\tngBabbage.filter('numeric', function () {\n\t  return function (val) {\n\t    var fval = parseFloat(val);\n\t    if (isNaN(fval)) {\n\t      return '-';\n\t    }\n\t    return ngBabbageGlobals.numberFormat(Math.round(fval));\n\t  };\n\t});\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbage', ['$http', '$rootScope', '$location', 'babbageApi', function ($http, $rootScope, $location, babbageApi) {\n\t  return {\n\t    restrict: 'E',\n\t    transclude: true,\n\t    scope: {\n\t      endpoint: '@',\n\t      cube: '@',\n\t      state: '=',\n\t      update: '&'\n\t    },\n\t    templateUrl: 'babbage-templates/babbage.html',\n\t    controller: ['$scope', function ($scope) {\n\t      var self = this;\n\t      self.queryModel = null;\n\t\n\t      self.init = function (queryModel) {\n\t        self.queryModel = queryModel;\n\t        self.update();\n\t      };\n\t\n\t      self.update = function () {\n\t        if (self.queryModel) {\n\t          babbageApi.getModel($scope.endpoint, $scope.cube).then(function (model) {\n\t            $scope.$broadcast('babbageUpdate', model, $scope.state);\n\t          });\n\t        }\n\t      };\n\t\n\t      self.subscribe = function (listener) {\n\t        return $scope.$on('babbageUpdate', listener);\n\t      };\n\t\n\t      self.getState = function () {\n\t        return $scope.state;\n\t      };\n\t\n\t      self.isEmbedded = function () {\n\t        return $scope.state.embed == 'true';\n\t      };\n\t\n\t      self.setState = function (s) {\n\t        $scope.state = s;\n\t        self.update();\n\t        $scope.update(s);\n\t      };\n\t\n\t      self.getApiUrl = function (endpoint) {\n\t        return babbageApi.getUrl($scope.endpoint, $scope.cube, endpoint);\n\t      };\n\t\n\t      self.getDimensionMembers = function (dimension) {\n\t        return babbageApi.getDimensionMembers($scope.endpoint, $scope.cube, dimension);\n\t      };\n\t\n\t      self.size = function (element, height) {\n\t        if (self.isEmbedded()) {\n\t          return {\n\t            width: document.documentElement.clientWidth,\n\t            height: document.documentElement.clientHeight\n\t          };\n\t        }\n\t        return {\n\t          width: element.clientWidth,\n\t          height: height(element.clientWidth, element.clientHeight)\n\t        };\n\t      };\n\t\n\t      self.getSorts = function () {\n\t        var sorts = [],\n\t            order = $scope.state.order || '',\n\t            order = asArray(order.split(','));\n\t        for (var i in order) {\n\t          var parts = order[i].split(':'),\n\t              sort = {};\n\t          sort.ref = parts[0];\n\t          sort.direction = parts[1] || null;\n\t          if (sort.ref.length) {\n\t            sorts.push(sort);\n\t          }\n\t        }\n\t        return sorts;\n\t      };\n\t\n\t      self.getSort = function (ref) {\n\t        var sorts = self.getSorts();\n\t        for (var i in sorts) {\n\t          if (sorts[i].ref == ref) {\n\t            return sorts[i];\n\t          }\n\t        }\n\t        return { ref: ref };\n\t      };\n\t\n\t      self.pushSort = function (ref, direction) {\n\t        var sorts = self.getSorts().filter(function (s) {\n\t          return s.ref != ref;\n\t        });\n\t        sorts.unshift({ ref: ref, direction: direction });\n\t        $scope.state.order = self.mergeSorts(sorts);\n\t        self.setState($scope.state);\n\t      };\n\t\n\t      self.removeSorts = function (ref) {\n\t        var sorts = self.getSorts().filter(function (s) {\n\t          return s.ref != ref;\n\t        });\n\t        return self.mergeSorts(sorts);\n\t      };\n\t\n\t      self.mergeSorts = function (order) {\n\t        var sorts = [];\n\t        order = asArray(order);\n\t        for (var i in order) {\n\t          var o = order[i];\n\t          if (angular.isObject(o) && o.ref.length) {\n\t            o.direction = o.direction || 'asc';\n\t            o = o.ref + ':' + o.direction;\n\t            sorts.push(o);\n\t          }\n\t        }\n\t        return sorts.join(',');\n\t      };\n\t\n\t      self.getQuery = function () {\n\t        var q = {\n\t          drilldown: [],\n\t          aggregates: [],\n\t          cut: $scope.state.cut || [],\n\t          page: $scope.state.page || 0,\n\t          pagesize: $scope.state.pagesize || 30,\n\t          order: self.getSorts()\n\t        };\n\t        return q;\n\t      };\n\t\n\t      self.queryParams = function (q) {\n\t        q.order = self.mergeSorts(q.order);\n\t\n\t        // join arguments and remove empty arguments\n\t        for (var k in q) {\n\t          if (angular.isArray(q[k])) {\n\t            if (['order', 'fields'].indexOf(k) != -1) {\n\t              q[k] = q[k].join(',');\n\t            } else {\n\t              q[k] = q[k].join('|');\n\t            }\n\t          }\n\t          q[k] = q[k] + '';\n\t          if (!q[k].length) {\n\t            delete q[k];\n\t          }\n\t        }\n\t        return { params: q };\n\t      };\n\t    }]\n\t  };\n\t}]);\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbageChart', ['$rootScope', '$http', function ($rootScope, $http) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {\n\t      chartType: '@'\n\t    },\n\t    templateUrl: 'babbage-templates/chart.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      scope.queryLoaded = false;\n\t      scope.cutoffWarning = false;\n\t      scope.cutoff = 0;\n\t\n\t      var getNames = function getNames(model) {\n\t        var names = {};\n\t        for (var ref in model.refs) {\n\t          var concept = model.refs[ref];\n\t          names[ref] = concept.label || concept.name || ref;\n\t        }\n\t        return names;\n\t      };\n\t\n\t      var generateColumns = function generateColumns(cells, category, grouping, value) {\n\t        var columns = [[category]],\n\t            series = { category: 0 };\n\t        for (var i in cells) {\n\t          var cell = cells[i],\n\t              field = grouping ? cell[grouping] : value;\n\t          if (!series[field]) {\n\t            series[field] = columns.push([field]) - 1;\n\t          }\n\t          if (columns[0].indexOf(cell[category]) < 1) {\n\t            columns[0].push(cell[category]);\n\t          }\n\t          var index = columns[0].indexOf(cell[category]);\n\t          columns[series[field]][index] = cell[value];\n\t        }\n\t        var maxLength = Math.max.apply(null, columns.map(function (r) {\n\t          return r.length;\n\t        }));\n\t        for (var i = 1; i < maxLength; i++) {\n\t          for (var j in columns) {\n\t            columns[j][i] = columns[j][i] || 0;\n\t          }\n\t        }\n\t        return columns;\n\t      };\n\t\n\t      var query = function query(model, state) {\n\t        var category = asArray(state.category)[0],\n\t            grouping = asArray(state.grouping)[0],\n\t            value = asArray(state.value)[0];\n\t\n\t        if (!value || !category) return;\n\t\n\t        var q = babbageCtrl.getQuery();\n\t        q.aggregates = [value];\n\t        q.drilldown = [category];\n\t        if (grouping) {\n\t          q.drilldown.push(grouping);\n\t        }\n\t\n\t        var order = [];\n\t        for (var i in q.order) {\n\t          var o = q.order[i];\n\t          if ([value, category].indexOf(o.ref) != -1) {\n\t            order.push(o);\n\t          }\n\t        }\n\t        if (!order.length) {\n\t          order = [{ ref: value, direction: 'desc' }];\n\t        }\n\t        if (grouping && order[0] && order[0].ref != grouping) {\n\t          order.unshift({ ref: grouping, direction: 'asc' });\n\t        }\n\t\n\t        q.order = order;\n\t        q.page = 0;\n\t        q.pagesize = 10000;\n\t\n\t        var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'), babbageCtrl.queryParams(q));\n\t        dfd.then(function (res) {\n\t          queryResult(res.data, q, model, state, category, grouping, value);\n\t        });\n\t      };\n\t\n\t      var queryResult = function queryResult(data, q, model, state, category, grouping, value) {\n\t        var wrapper = element.querySelectorAll('.chart-babbage')[0],\n\t            size = babbageCtrl.size(wrapper, function (w) {\n\t          return w * 0.6;\n\t        }),\n\t            colors = ngBabbageGlobals.colorScale.copy(),\n\t            columns = generateColumns(data.cells, category, grouping, value),\n\t            names = getNames(model),\n\t            groups = [],\n\t            types = {},\n\t            chartType = scope.chartType;\n\t\n\t        if (grouping && chartType == 'line') {\n\t          chartType = 'area';\n\t        }\n\t\n\t        for (var i in columns) {\n\t          if (i > 0) {\n\t            if (grouping) {\n\t              key = randomKey();\n\t              names[key] = columns[i][0];\n\t              columns[i][0] = key;\n\t              groups.push(key);\n\t            } else {\n\t              groups.push(columns[i][0]);\n\t            }\n\t            types[columns[i][0]] = chartType;\n\t          }\n\t        }\n\t\n\t        d3.select(wrapper).style(\"width\", size.width + \"px\").style(\"height\", size.height + \"px\");\n\t\n\t        var chart = c3.generate({\n\t          bindto: wrapper,\n\t          data: {\n\t            columns: columns,\n\t            names: names,\n\t            color: function color(_color, d) {\n\t              var c = d.id || d;\n\t              if (chartType == 'bar' && !grouping) {\n\t                c = d.index;\n\t              };\n\t              return colors(c);\n\t            },\n\t            order: null,\n\t            x: category,\n\t            groups: [groups],\n\t            types: types\n\t          },\n\t          point: {\n\t            show: false\n\t          },\n\t          grid: {\n\t            focus: {\n\t              show: false\n\t            }\n\t          },\n\t          axis: {\n\t            x: {\n\t              type: 'category',\n\t              tick: {\n\t                culling: true,\n\t                fit: true\n\t              }\n\t            },\n\t            y: {\n\t              tick: {\n\t                format: ngBabbageGlobals.numberFormat,\n\t                culling: true,\n\t                fit: true\n\t              },\n\t              lines: [{ value: 0 }]\n\t            }\n\t          }\n\t        });\n\t\n\t        scope.queryLoaded = true;\n\t        scope.cutoffWarning = data.total_cell_count > q.pagesize;\n\t        scope.cutoff = q.pagesize;\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, model, state) {\n\t        query(model, state);\n\t      });\n\t      scope.$on('$destroy', unsubscribe);\n\t\n\t      var queryModel = {\n\t        value: {\n\t          label: 'Value',\n\t          addLabel: 'set height',\n\t          types: ['aggregates'],\n\t          defaults: [],\n\t          sortId: 1,\n\t          multiple: false\n\t        },\n\t        grouping: {\n\t          label: 'Grouping (opt)',\n\t          addLabel: 'select',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 2,\n\t          remove: true,\n\t          multiple: false\n\t        }\n\t      };\n\t\n\t      if (scope.chartType == 'line') {\n\t        queryModel.category = {\n\t          label: 'Series',\n\t          addLabel: 'set series',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 0,\n\t          multiple: false\n\t        };\n\t      }\n\t\n\t      if (scope.chartType == 'bar') {\n\t        queryModel.category = {\n\t          label: 'Categories',\n\t          addLabel: 'set bars',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 0,\n\t          multiple: false\n\t        };\n\t      }\n\t\n\t      babbageCtrl.init(queryModel);\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tvar VAL_KEY = '@@@@',\n\t    POS_KEY = '!@!@';\n\t\n\tngBabbage.directive('babbageCrosstab', ['$rootScope', '$http', function ($rootScope, $http) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {\n\t      drilldown: '='\n\t    },\n\t    templateUrl: 'babbage-templates/crosstab.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      scope.queryLoaded = false;\n\t      scope.columns = [];\n\t      scope.rows = [];\n\t      scope.table = [];\n\t\n\t      var query = function query(model, state) {\n\t        state.rows = asArray(state.rows);\n\t        state.columns = asArray(state.columns);\n\t        state.aggregates = asArray(state.aggregates);\n\t        // TODO: handle a case in which both sets contain the same\n\t        // ref.\n\t\n\t        var q = babbageCtrl.getQuery();\n\t        q.aggregates = q.aggregates.concat(state.aggregates);\n\t        if (!q.aggregates.length) {\n\t          q.aggregates = defaultAggregates(model);\n\t        }\n\t        q.drilldown = q.drilldown.concat(state.rows);\n\t        q.drilldown = q.drilldown.concat(state.columns);\n\t        q.page = 0;\n\t        q.pagesize = q.pagesize * 10000;\n\t\n\t        q.order = asArray(q.order);\n\t        var drilldowns = state.rows.concat(state.columns),\n\t            refs = drilldowns.concat(q.aggregates);\n\t        for (var i in drilldowns) {\n\t          var dd = drilldowns[i];\n\t          if (!babbageCtrl.getSort(dd).direction) {\n\t            if (q.order.indexOf(dd) == -1) {\n\t              q.order.push({ ref: dd });\n\t            }\n\t          }\n\t        }\n\t        var order = [];\n\t        for (var i in q.order) {\n\t          var o = q.order[i];\n\t          if (refs.indexOf(o.ref) != -1) {\n\t            order.push(o);\n\t          }\n\t        }\n\t        q.order = order;\n\t\n\t        var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'), babbageCtrl.queryParams(q));\n\t        dfd.then(function (res) {\n\t          queryResult(res.data, q, model, state);\n\t        });\n\t      };\n\t\n\t      var queryResult = function queryResult(data, q, model, state) {\n\t        state.rows = asArray(state.rows);\n\t        state.columns = asArray(state.columns);\n\t\n\t        var aggregates = data.aggregates.map(function (agg) {\n\t          return model.aggregates[agg];\n\t        });\n\t\n\t        // following code inspired by:\n\t        // https://github.com/DataBrewery/babbage/blob/master/babbage/formatters.py#L218\n\t        var matrix = {},\n\t            table = [],\n\t            row_headers = [],\n\t            column_headers = [],\n\t            row_keys = [],\n\t            column_keys = [];\n\t\n\t        for (var i in data.cells) {\n\t          var pickValue = function pickValue(k) {\n\t            return cell[k];\n\t          },\n\t              pickRefs = function pickRefs(k) {\n\t            return cell[model.refKeys[k]] + cell[k];\n\t          };\n\t\n\t          var cell = data.cells[i],\n\t              row_values = state.rows.map(pickValue),\n\t              row_set = state.rows.map(pickRefs).join(VAL_KEY),\n\t              all_column_values = state.columns.map(pickValue),\n\t              all_column_set = state.columns.map(pickRefs);\n\t\n\t          for (var k in aggregates) {\n\t            var agg = aggregates[k],\n\t                label = agg.label || agg.name,\n\t                column_values = all_column_values.concat([label]);\n\t            column_set = all_column_set.concat([label]).join(VAL_KEY);\n\t\n\t            if (row_keys.indexOf(row_set) == -1) {\n\t              row_keys.push(row_set);\n\t              row_values.key = row_set;\n\t              row_headers.push(row_values);\n\t            }\n\t\n\t            if (column_keys.indexOf(column_set) == -1) {\n\t              column_keys.push(column_set);\n\t              column_headers.push(column_values);\n\t            }\n\t\n\t            var key = [row_set, column_set].join(POS_KEY);\n\t            matrix[key] = cell[agg.ref];\n\t          }\n\t        }\n\t\n\t        for (var i in row_keys) {\n\t          var row_key = row_keys[i];\n\t          var row = [];\n\t          for (var j in column_keys) {\n\t            var column_key = column_keys[j];\n\t            var key = [row_key, column_key].join(POS_KEY);\n\t            row.push(matrix[key] || data.aggregates.map(function (a) {\n\t              return undefined;\n\t            }));\n\t          }\n\t          table.push(row);\n\t        }\n\t\n\t        scope.rows = row_headers;\n\t        scope.columns = column_headers;\n\t        scope.table = table;\n\t        scope.queryLoaded = true;\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, model, state) {\n\t        query(model, state);\n\t      });\n\t      scope.$on('$destroy', unsubscribe);\n\t\n\t      var defaultAggregates = function defaultAggregates(model) {\n\t        var aggs = [];\n\t        for (var i in model.aggregates) {\n\t          var agg = model.aggregates[i];\n\t          aggs.push(agg.ref);\n\t        }\n\t        return aggs;\n\t      };\n\t\n\t      // console.log('crosstab init');\n\t      babbageCtrl.init({\n\t        columns: {\n\t          label: 'Columns',\n\t          addLabel: 'add column',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 0,\n\t          multiple: true\n\t        },\n\t        rows: {\n\t          label: 'Rows',\n\t          addLabel: 'add row',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 1,\n\t          multiple: true\n\t        },\n\t        aggregates: {\n\t          label: 'Values',\n\t          addLabel: 'add value',\n\t          types: ['aggregates'],\n\t          defaults: defaultAggregates,\n\t          sortId: 2,\n\t          multiple: true\n\t        }\n\t\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbageFacts', ['$rootScope', '$http', '$q', function ($rootScope, $http, $q) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {\n\t      drilldown: '='\n\t    },\n\t    templateUrl: 'babbage-templates/facts.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      scope.page = 0;\n\t      scope.data = [];\n\t      scope.columns = [];\n\t      scope.pagerCtx = {};\n\t      scope.getSort = babbageCtrl.getSort;\n\t      scope.pushSort = babbageCtrl.pushSort;\n\t\n\t      var query = function query(model, state) {\n\t        var q = babbageCtrl.getQuery();\n\t        q.fields = asArray(state.fields);\n\t        if (q.fields.length == 0) {\n\t          q.fields = defaultFields(model);\n\t        }\n\t\n\t        var order = [];\n\t        for (var i in q.order) {\n\t          var o = q.order[i];\n\t          if (q.fields.indexOf(o.ref) != -1) {\n\t            order.push(o);\n\t          }\n\t        }\n\t        q.order = order;\n\t\n\t        var aq = angular.copy(q);\n\t        aq.drilldown = aq.fields = [];\n\t        aq.page = 0;\n\t        var dfd = $http.get(babbageCtrl.getApiUrl('facts'), babbageCtrl.queryParams(q));\n\t        dfd.then(function (res) {\n\t          queryResult(res.data, q, state, model);\n\t        });\n\t      };\n\t\n\t      var queryResult = function queryResult(data, q, state, model) {\n\t        if (!data.data.length) {\n\t          scope.columns = [];\n\t          scope.data = [];\n\t          scope.pagerCtx = {};\n\t          return;\n\t        };\n\t\n\t        var columns = [],\n\t            prev = null,\n\t            prev_idx = 0;\n\t\n\t        for (var i in data.fields) {\n\t          var ref = data.fields[i],\n\t              column = model.refs[ref],\n\t              header = column.dimension ? column.dimension : column;\n\t\n\t          if (prev && header.name == prev) {\n\t            columns[prev_idx].span += 1;\n\t            column.span = 0;\n\t          } else {\n\t            column.span = 1;\n\t            column.label = column.label || column.name;\n\t            column.header = header.label || header.name;\n\t            column.hide = column.hideLabel;\n\t            prev = header.name;\n\t            prev_idx = columns.length;\n\t          }\n\t          columns.push(column);\n\t        }\n\t        scope.columns = columns;\n\t        scope.data = data.data;\n\t        scope.pagerCtx = {\n\t          page: q.page,\n\t          pagesize: q.pagesize,\n\t          total: data.total_fact_count\n\t        };\n\t      };\n\t\n\t      var defaultFields = function defaultFields(model) {\n\t        var defaults = [];\n\t        for (var i in model.measures) {\n\t          var mea = model.measures[i];\n\t          defaults.push(mea.ref);\n\t        }\n\t        for (var i in model.dimensions) {\n\t          var dim = model.dimensions[i];\n\t          for (var k in dim.attributes) {\n\t            var attr = dim.attributes[k];\n\t            if (k == dim.label_attribute) {\n\t              defaults.push(attr.ref);\n\t            }\n\t          }\n\t        }\n\t        return defaults;\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, model, state) {\n\t        query(model, state);\n\t      });\n\t      scope.$on('$destroy', unsubscribe);\n\t\n\t      // console.log('facts init');\n\t      babbageCtrl.init({\n\t        fields: {\n\t          label: 'Columns',\n\t          addLabel: 'add column',\n\t          types: ['attributes', 'measures'],\n\t          defaults: defaultFields,\n\t          sortId: 0,\n\t          multiple: true\n\t        }\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbagePager', ['$timeout', '$location', function ($timeout, $location) {\n\t  return {\n\t    restrict: 'E',\n\t    require: '^babbage',\n\t    scope: {\n\t      'context': '='\n\t    },\n\t    templateUrl: 'babbage-templates/pager.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      scope.showPager = false;\n\t      scope.hasPrev = false;\n\t      scope.hasNext = false;\n\t      scope.pages = [];\n\t      scope.cur = 0;\n\t      scope.num = 0;\n\t\n\t      scope.$watch('context', function (e) {\n\t        if (!scope.context || scope.context.total <= scope.context.pagesize) {\n\t          return;\n\t        }\n\t        scope.current = parseInt(scope.context.page, 10) || 0;\n\t        scope.num = Math.ceil(scope.context.total / scope.context.pagesize);\n\t        var pages = [],\n\t            num = scope.num,\n\t            range = 3,\n\t            low = scope.current - range,\n\t            high = scope.current + range;\n\t\n\t        if (low < 0) {\n\t          low = 0;\n\t          high = Math.min(2 * range + 1, num);\n\t        }\n\t        if (high > num) {\n\t          high = num;\n\t          low = Math.max(1, num - 2 * range + 1);\n\t        }\n\t\n\t        for (var page = low; page <= high; page++) {\n\t          // var offset = (page - 1) * scope.context.pagesize;\n\t          pages.push({\n\t            page: page,\n\t            current: page == scope.current\n\t          });\n\t        }\n\t        //offset: offset\n\t        scope.hasPrev = scope.current > 0;\n\t        scope.hasNext = scope.current < num;\n\t        scope.showPager = num > 1;\n\t        scope.pages = pages;\n\t      });\n\t\n\t      scope.setPage = function (page) {\n\t        if (page >= 0 && page <= scope.num) {\n\t          var state = babbageCtrl.getState();\n\t          state.page = page;\n\t          babbageCtrl.setState(state);\n\t        }\n\t      };\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbagePanel', ['$rootScope', 'slugifyFilter', function ($rootScope, slugifyFilter) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {},\n\t    templateUrl: 'babbage-templates/panel.html',\n\t    link: function link($scope, $element, attrs, babbageCtrl) {\n\t      var model = null;\n\t\n\t      $scope.state = {};\n\t      $scope.axes = [];\n\t      $scope.filterAttributes = [];\n\t      $scope.filters = [];\n\t      $scope.getSort = babbageCtrl.getSort;\n\t      $scope.pushSort = babbageCtrl.pushSort;\n\t      $scope.embedLink = null;\n\t\n\t      var update = function update() {\n\t        babbageCtrl.setState($scope.state);\n\t      };\n\t\n\t      $scope.add = function (axis, ref) {\n\t        if (axis.selected.indexOf(ref) == -1) {\n\t          if (axis.multiple) {\n\t            axis.selected.push(ref);\n\t          } else {\n\t            if (axis.selected.length) {\n\t              $scope.state.order = babbageCtrl.removeSorts(axis.selected[0]);\n\t            }\n\t            axis.selected = [ref];\n\t          }\n\t          $scope.state[axis.name] = axis.selected;\n\t          update();\n\t        }\n\t      };\n\t\n\t      $scope.remove = function (axis, ref) {\n\t        var i = axis.selected.indexOf(ref);\n\t        if (i != -1) {\n\t          axis.selected.splice(i, 1);\n\t          $scope.state[axis.name] = axis.selected;\n\t          $scope.state.order = babbageCtrl.removeSorts(ref);\n\t          update();\n\t        }\n\t      };\n\t\n\t      var makeOptions = function makeOptions() {\n\t        var options = [];\n\t        for (var di in model.dimensions) {\n\t          var dim = model.dimensions[di];\n\t          for (var ai in dim.attributes) {\n\t            var attr = angular.copy(dim.attributes[ai]);\n\t            attr.dimension = dim;\n\t            attr.type = 'attributes';\n\t            if (slugifyFilter(dim.label) != slugifyFilter(attr.label)) {\n\t              attr.subLabel = '' + attr.label;\n\t            }\n\t            attr.sortKey = '0' + dim.label + attr.label;\n\t            attr.label = dim.label;\n\t            options.push(attr);\n\t          }\n\t        }\n\t\n\t        for (var ai in model.aggregates) {\n\t          var agg = model.aggregates[ai];\n\t          agg.type = 'aggregates';\n\t          agg.sortKey = '1' + ai;\n\t          options.push(agg);\n\t        }\n\t\n\t        for (var mi in model.measures) {\n\t          var mea = model.measures[mi];\n\t          mea.type = 'measures';\n\t          mea.sortKey = '2' + mi;\n\t          options.push(mea);\n\t        }\n\t\n\t        return options;\n\t      };\n\t\n\t      var sortOptions = function sortOptions(a, b) {\n\t        return a.label.localeCompare(b.label);\n\t      };\n\t\n\t      var makeAxes = function makeAxes(state, options) {\n\t        var axes = [];\n\t        if (!babbageCtrl.queryModel) return [];\n\t\n\t        for (var name in babbageCtrl.queryModel) {\n\t          var axis = babbageCtrl.queryModel[name];\n\t          axis.name = name;\n\t          if (!angular.isDefined(axis.remove)) {\n\t            axis.remove = axis.multiple;\n\t          }\n\t          axis.sortId = axis.sortId || 1;\n\t          axis.available = [];\n\t          axis.active = [];\n\t\n\t          axis.selected = asArray(state[name]);\n\t          if (!axis.selected.length) {\n\t            if (angular.isFunction(axis.defaults)) {\n\t              axis.selected = axis.defaults(model);\n\t            } else {\n\t              axis.selected = asArray(axis.defaults);\n\t            }\n\t          }\n\t          axis.available = axis.available.sort(sortOptions);\n\t          axis.active = axis.active.sort(sortOptions);\n\t\n\t          for (var i in options) {\n\t            var opt = options[i];\n\t            if (axis.selected.indexOf(opt.ref) != -1) {\n\t              axis.active.push(opt);\n\t            } else if (axis.types.indexOf(opt.type) != -1) {\n\t              axis.available.push(opt);\n\t            }\n\t          }\n\t          axes.push(axis);\n\t        }\n\t\n\t        return axes.sort(function (a, b) {\n\t          return a.sortId - b.sortId;\n\t        });\n\t      };\n\t\n\t      var makeFilterAttributes = function makeFilterAttributes(options) {\n\t        var filters = [];\n\t        for (var i in options) {\n\t          var opt = options[i];\n\t          if (opt.type == 'attributes' && opt.dimension.cardinality_class != 'high') {\n\t            if (opt.dimension.label_ref == opt.ref) {\n\t              filters.push(opt);\n\t            }\n\t          }\n\t        }\n\t        return filters.sort(sortOptions);\n\t      };\n\t\n\t      var getAttributeByRef = function getAttributeByRef(ref) {\n\t        for (var i in $scope.filterAttributes) {\n\t          var attr = $scope.filterAttributes[i];\n\t          if (attr.ref == ref) {\n\t            return attr;\n\t          }\n\t        }\n\t      };\n\t\n\t      var loadFilters = function loadFilters(state) {\n\t        var cuts = asArray(state.cut);\n\t        for (var i in cuts) {\n\t          var cut = cuts[i];\n\t          if (cut.indexOf(':') != -1) {\n\t            var ref = cut.split(':', 1)[0],\n\t                values = cut.slice(ref.length + 1).split(';');\n\t            for (var j in values) {\n\t              $scope.addFilter(getAttributeByRef(ref), values[j]);\n\t            }\n\t          }\n\t        }\n\t      };\n\t\n\t      $scope.addFilter = function (attr, value) {\n\t        babbageCtrl.getDimensionMembers(attr.ref).then(function (res) {\n\t          $scope.filters.push({\n\t            ref: attr.ref,\n\t            attr: attr,\n\t            value: value,\n\t            values: res.data.data.map(function (e) {\n\t              return e[attr.ref];\n\t            })\n\t          });\n\t        });\n\t      };\n\t\n\t      $scope.removeFilter = function (filter) {\n\t        var idx = $scope.filters.indexOf(filter);\n\t        if (idx != -1) {\n\t          $scope.filters.splice(idx, 1);\n\t          $scope.updateFilters();\n\t        }\n\t      };\n\t\n\t      $scope.setFilter = function (filter, item, value) {\n\t        $scope.updateFilters();\n\t      };\n\t\n\t      $scope.updateFilters = function () {\n\t        var filters = {};\n\t        for (var i in $scope.filters) {\n\t          var f = $scope.filters[i];\n\t          if (angular.isUndefined(filters[f.ref])) {\n\t            filters[f.ref] = [];\n\t          }\n\t          filters[f.ref].push(f.value);\n\t        }\n\t        var cuts = [];\n\t        for (var ref in filters) {\n\t          var values = filters[ref],\n\t              value = values.join(';');\n\t          cut = ref + ':' + value;\n\t          cuts.push(cut);\n\t        }\n\t        $scope.state.cut = cuts;\n\t        update();\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, mdl, state) {\n\t        model = mdl;\n\t        $scope.state = state;\n\t\n\t        var options = makeOptions();\n\t        $scope.axes = makeAxes(state, options);\n\t        $scope.filterAttributes = makeFilterAttributes(options);\n\t        $scope.filters = [];\n\t        loadFilters(state);\n\t      });\n\t      $scope.$on('$destroy', unsubscribe);\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbageSankey', ['$rootScope', '$http', '$document', function ($rootScope, $http, $document) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {\n\t      drilldown: '='\n\t    },\n\t    templateUrl: 'babbage-templates/sankey.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      var unit = 15,\n\t          margin = { top: unit / 2, right: 1, bottom: 6, left: 1 },\n\t          svg = null,\n\t          group = null;\n\t\n\t      scope.queryLoaded = false;\n\t      scope.cutoffWarning = false;\n\t      scope.cutoff = 0;\n\t\n\t      var query = function query(model, state) {\n\t        var source = asArray(state.source)[0],\n\t            target = asArray(state.target)[0];\n\t        aggregate = asArray(state.aggregate)[0], aggregate = aggregate ? [aggregate] : defaultAggregate(model);\n\t\n\t        var q = babbageCtrl.getQuery();\n\t        q.aggregates = aggregate;\n\t        if (!source || !target) {\n\t          return;\n\t        }\n\t        q.drilldown = [source, target];\n\t\n\t        q.order = [{\n\t          ref: aggregate,\n\t          direction: 'desc'\n\t        }, {\n\t          ref: source,\n\t          direction: 'asc'\n\t        }, {\n\t          ref: target,\n\t          direction: 'asc'\n\t        }];\n\t        q.page = 0;\n\t        q.pagesize = 2000;\n\t\n\t        scope.queryLoaded = true;\n\t        scope.cutoffWarning = false;\n\t        var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'), babbageCtrl.queryParams(q));\n\t\n\t        var wrapper = element.querySelectorAll('.sankey-babbage')[0],\n\t            size = babbageCtrl.size(wrapper, function (w) {\n\t          return w * 0.6;\n\t        });\n\t\n\t        unit = Math.max(400, size.height) / 20;\n\t\n\t        if (!svg) {\n\t          svg = d3.select(wrapper).append(\"svg\");\n\t          group = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\t        }\n\t\n\t        dfd.then(function (res) {\n\t          queryResult(size, res.data, q, model, state);\n\t        });\n\t      };\n\t\n\t      var queryResult = function queryResult(size, data, q, model, state) {\n\t        var sourceRef = asArray(state.source)[0],\n\t            targetRef = asArray(state.target)[0];\n\t        aggregateRef = asArray(state.aggregate)[0], aggregateRef = aggregateRef ? [aggregateRef] : defaultAggregate(model), size.height = data.cells.length * unit;\n\t\n\t        svg.attr(\"height\", size.height + margin.top + margin.bottom);\n\t        svg.attr(\"width\", size.width);\n\t\n\t        var graph = { nodes: [], links: [] },\n\t            objs = {};\n\t\n\t        var sourceScale = ngBabbageGlobals.colorScale.copy(),\n\t            targetScale = d3.scale.ordinal().range(['#ddd', '#ccc', '#eee', '#bbb']);\n\t\n\t        data.cells.forEach(function (cell) {\n\t          var sourceId = cell[sourceRef],\n\t              targetId = cell[targetRef],\n\t              link = {\n\t            //value: Math.sqrt(cell[aggregateRef]),\n\t            value: cell[aggregateRef],\n\t            number: ngBabbageGlobals.numberFormat(cell[aggregateRef])\n\t          };\n\t\n\t          if (link.value == 0 || !sourceId || !targetId) {\n\t            return;\n\t          }\n\t          sourceId = 'source-' + sourceRef + sourceId;\n\t          targetId = 'target-' + targetRef + targetId;\n\t\n\t          if (!objs[sourceId]) {\n\t            var label = cell[model.refLabels[sourceRef]];\n\t            graph.nodes.push({\n\t              name: label,\n\t              color: sourceScale(sourceId)\n\t            });\n\t            objs[sourceId] = { idx: graph.nodes.length - 1 };\n\t          }\n\t          link.source = objs[sourceId].idx;\n\t\n\t          if (!objs[targetId]) {\n\t            var label = cell[model.refLabels[targetRef]];\n\t            graph.nodes.push({\n\t              name: label,\n\t              color: targetScale(targetId)\n\t            });\n\t            objs[targetId] = {\n\t              idx: graph.nodes.length - 1\n\t            };\n\t          }\n\t          link.target = objs[targetId].idx;\n\t          graph.links.push(link);\n\t        });\n\t\n\t        var sankey = d3.sankey().nodeWidth(unit).nodePadding(unit * 0.6).size([size.width, size.height]);\n\t\n\t        var path = sankey.link();\n\t\n\t        sankey.nodes(graph.nodes).links(graph.links).layout(32);\n\t\n\t        group.selectAll('g').remove();\n\t\n\t        var link = group.append(\"g\").selectAll(\".link\").data(graph.links).enter().append(\"path\").attr(\"class\", \"link\").attr(\"d\", path).style(\"stroke-width\", function (d) {\n\t          return Math.max(1, d.dy);\n\t        }).style(\"stroke\", function (d) {\n\t          return d.source.color;\n\t        }).sort(function (a, b) {\n\t          return b.dy - a.dy;\n\t        });\n\t\n\t        link.append(\"title\").text(function (d) {\n\t          return d.source.name + \" → \" + d.target.name + \"\\n\" + d.number;\n\t        });\n\t\n\t        var node = group.append(\"g\").selectAll(\".node\").data(graph.nodes).enter().append(\"g\").attr(\"class\", \"node\").attr(\"transform\", function (d) {\n\t          return \"translate(\" + d.x + \",\" + d.y + \")\";\n\t        });\n\t\n\t        node.append(\"rect\").attr(\"height\", function (d) {\n\t          return d.dy;\n\t        }).attr(\"width\", sankey.nodeWidth()).style(\"fill\", function (d) {\n\t          return d.color;\n\t        })\n\t        //.style(\"stroke\", function(d) { return d3.rgb(d.color).darker(1); })\n\t        .style(\"stroke\", function (d) {\n\t          return d.color;\n\t        }).append(\"title\").text(function (d) {\n\t          return d.name;\n\t        });\n\t\n\t        node.append(\"text\").attr(\"x\", -6).attr(\"y\", function (d) {\n\t          return d.dy / 2;\n\t        }).attr(\"dy\", \".35em\").attr(\"text-anchor\", \"end\").attr(\"transform\", null).text(function (d) {\n\t          return d.name;\n\t        }).filter(function (d) {\n\t          return d.x < size.width / 2;\n\t        }).attr(\"x\", 6 + sankey.nodeWidth()).attr(\"text-anchor\", \"start\");\n\t\n\t        scope.cutoffWarning = data.total_cell_count > q.pagesize;\n\t        scope.cutoff = q.pagesize;\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, model, state) {\n\t        query(model, state);\n\t      });\n\t      scope.$on('$destroy', unsubscribe);\n\t\n\t      var defaultAggregate = function defaultAggregate(model) {\n\t        for (var i in model.aggregates) {\n\t          var agg = model.aggregates[i];\n\t          if (agg.measure) {\n\t            return [agg.ref];\n\t          }\n\t        }\n\t        return [];\n\t      };\n\t\n\t      babbageCtrl.init({\n\t        source: {\n\t          label: 'Source',\n\t          addLabel: 'set left side',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 0,\n\t          multiple: false\n\t        },\n\t        target: {\n\t          label: 'Target',\n\t          addLabel: 'set right side',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 1,\n\t          multiple: false\n\t        },\n\t        aggregate: {\n\t          label: 'Width',\n\t          addLabel: 'set width',\n\t          types: ['aggregates'],\n\t          defaults: defaultAggregate,\n\t          sortId: 2,\n\t          multiple: false\n\t        }\n\t\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbageTreemap', ['$rootScope', '$http', '$document', function ($rootScope, $http, $document) {\n\t  return {\n\t    restrict: 'EA',\n\t    require: '^babbage',\n\t    scope: {\n\t      drilldown: '='\n\t    },\n\t    templateUrl: 'babbage-templates/treemap.html',\n\t    link: function link(scope, element, attrs, babbageCtrl) {\n\t      var treemap = null,\n\t          div = null;\n\t\n\t      scope.queryLoaded = false;\n\t      scope.cutoffWarning = false;\n\t\n\t      var query = function query(model, state) {\n\t        var tile = asArray(state.tile)[0],\n\t            area = asArray(state.area)[0],\n\t            area = area ? [area] : defaultArea(model);\n\t\n\t        var q = babbageCtrl.getQuery();\n\t        q.aggregates = area;\n\t        if (!tile) {\n\t          return;\n\t        }\n\t        q.drilldown = [tile];\n\t\n\t        var order = [];\n\t        for (var i in q.order) {\n\t          var o = q.order[i];\n\t          if ([tile, area].indexOf(o.ref) != -1) {\n\t            order.push(o);\n\t          }\n\t        }\n\t        if (!order.length) {\n\t          order = [{ ref: area, direction: 'desc' }];\n\t        }\n\t\n\t        q.order = order;\n\t        q.page = 0;\n\t        q.pagesize = 50;\n\t\n\t        scope.cutoffWarning = false;\n\t        scope.queryLoaded = true;\n\t        var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'), babbageCtrl.queryParams(q));\n\t\n\t        var wrapper = element.querySelectorAll('.treemap-babbage')[0],\n\t            size = babbageCtrl.size(wrapper, function (w) {\n\t          return w * 0.6;\n\t        });\n\t\n\t        treemap = d3.layout.treemap().size([size.width, size.height]).sticky(true).sort(function (a, b) {\n\t          return a[area] - b[area];\n\t        }).value(function (d) {\n\t          return d[area];\n\t        });\n\t\n\t        d3.select(wrapper).select(\"div\").remove();\n\t        div = d3.select(wrapper).append(\"div\").style(\"position\", \"relative\").style(\"width\", size.width + \"px\").style(\"height\", size.height + \"px\");\n\t\n\t        dfd.then(function (res) {\n\t          queryResult(res.data, q, model, state);\n\t        });\n\t      };\n\t\n\t      var queryResult = function queryResult(data, q, model, state) {\n\t        var tileRef = asArray(state.tile)[0],\n\t            areaRef = asArray(state.area)[0],\n\t            areaRef = areaRef ? [areaRef] : defaultArea(model);\n\t\n\t        var root = {\n\t          children: []\n\t        };\n\t\n\t        for (var i in data.cells) {\n\t          var cell = data.cells[i];\n\t          cell._area_fmt = ngBabbageGlobals.numberFormat(Math.round(cell[areaRef]));\n\t          cell._name = cell[tileRef];\n\t          cell._color = ngBabbageGlobals.colorScale(i);\n\t          cell._percentage = cell[areaRef] / Math.max(data.summary[areaRef], 1);\n\t          root.children.push(cell);\n\t        };\n\t\n\t        var node = div.datum(root).selectAll(\".node\").data(treemap.nodes).enter().append(\"a\").attr(\"href\", function (d) {\n\t          return d.href;\n\t        }).attr(\"class\", \"node\").call(positionNode).style(\"background\", '#fff').html(function (d) {\n\t          if (d._percentage < 0.02) {\n\t            return '';\n\t          }\n\t          return d.children ? null : '<span class=\"amount\">' + d._area_fmt + '</span>' + d._name;\n\t        }).on(\"mouseover\", function (d) {\n\t          d3.select(this).transition().duration(200).style({ 'background': d3.rgb(d._color).darker() });\n\t        }).on(\"mouseout\", function (d) {\n\t          d3.select(this).transition().duration(500).style({ 'background': d._color });\n\t        }).transition().duration(500).delay(function (d, i) {\n\t          return Math.min(i * 30, 1500);\n\t        }).style(\"background\", function (d) {\n\t          return d._color;\n\t        });\n\t\n\t        scope.cutoffWarning = data.total_cell_count > q.pagesize;\n\t        scope.cutoff = q.pagesize;\n\t      };\n\t\n\t      function positionNode() {\n\t        this.style(\"left\", function (d) {\n\t          return d.x + \"px\";\n\t        }).style(\"top\", function (d) {\n\t          return d.y + \"px\";\n\t        }).style(\"width\", function (d) {\n\t          return Math.max(0, d.dx - 1) + \"px\";\n\t        }).style(\"height\", function (d) {\n\t          return Math.max(0, d.dy - 1) + \"px\";\n\t        });\n\t      };\n\t\n\t      var unsubscribe = babbageCtrl.subscribe(function (event, model, state) {\n\t        query(model, state);\n\t      });\n\t      scope.$on('$destroy', unsubscribe);\n\t\n\t      var defaultArea = function defaultArea(model) {\n\t        for (var i in model.aggregates) {\n\t          var agg = model.aggregates[i];\n\t          if (agg.measure) {\n\t            return [agg.ref];\n\t          }\n\t        }\n\t        return [];\n\t      };\n\t\n\t      babbageCtrl.init({\n\t        tile: {\n\t          label: 'Tiles',\n\t          addLabel: 'set breakdown',\n\t          types: ['attributes'],\n\t          defaults: [],\n\t          sortId: 0,\n\t          multiple: false\n\t        },\n\t        area: {\n\t          label: 'Area',\n\t          addLabel: 'set area',\n\t          types: ['aggregates'],\n\t          defaults: defaultArea,\n\t          sortId: 1,\n\t          multiple: false\n\t        }\n\t      });\n\t    }\n\t  };\n\t}]);\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tfunction asArray(obj) {\n\t  objs = obj ? obj : [];\n\t  return angular.isArray(objs) ? objs : [objs];\n\t}\n\t\n\tfunction randomKey() {\n\t  return 'X' + Math.random().toString(36).substring(7);\n\t}\n\t\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\t// suggested polyfill for safari & IE\n\tif (!String.prototype.endsWith) {\n\t  String.prototype.endsWith = function (searchString, position) {\n\t    var subjectString = this.toString();\n\t    if (position === undefined || position > subjectString.length) {\n\t      position = subjectString.length;\n\t    }\n\t    position -= searchString.length;\n\t    var lastIndex = subjectString.indexOf(searchString, position);\n\t    return lastIndex !== -1 && lastIndex === position;\n\t  };\n\t}\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngBabbage.directive('babbageWorkspace', ['$location', function ($location) {\n\t  return {\n\t    restrict: 'EA',\n\t    scope: {\n\t      endpoint: '@',\n\t      cube: '@'\n\t    },\n\t    templateUrl: 'babbage-templates/workspace.html',\n\t    link: function link(scope, element, attrs) {\n\t      scope.state = null;\n\t      scope.embedLink = null;\n\t\n\t      scope.setView = function (view) {\n\t        scope.view = view;\n\t        scope.state.view = view;\n\t        scope.update(scope.state);\n\t      };\n\t\n\t      scope.update = function (state) {\n\t        scope.state = state;\n\t        scope.view = scope.state.view || 'facts';\n\t        $location.search(state);\n\t        prepareEmbed();\n\t      };\n\t\n\t      var prepareEmbed = function prepareEmbed() {\n\t        var qs = [],\n\t            opts = angular.extend({}, $location.search(), {\n\t          view: scope.view,\n\t          endpoint: scope.endpoint,\n\t          cube: scope.cube,\n\t          embed: true\n\t        });\n\t        for (var name in opts) {\n\t          var values = asArray(opts[name]);\n\t          for (var i in values) {\n\t            var val = encodeURIComponent(values[i]);\n\t            qs.push(name + '=' + val);\n\t          }\n\t        }\n\t        scope.embedLink = ngBabbageGlobals.embedLink + '#/?' + qs.join('&');\n\t      };\n\t\n\t      scope.update($location.search());\n\t    }\n\t  };\n\t}]);\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** babbage.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 6cf42be916a8fcebaa6d\n **/","require('./app')\nrequire('./api')\nrequire('./babbage')\nrequire('./chart')\nrequire('./crosstab')\nrequire('./facts')\nrequire('./pager')\nrequire('./panel')\nrequire('./sankey')\nrequire('./treemap')\nrequire('./util')\nrequire('./workspace')\n\nmodule.exports = 'ngBabbage'\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","\nngBabbage.factory('babbageApi', ['$http', '$q', 'slugifyFilter', function($http, $q, slugifyFilter) {\n  var cache = {};\n\n  var getUrl = function(endpoint, cube, path) {\n    var api = endpoint.slice(),\n        api = api.endsWith('/') ? api.slice(0, api.length - 1) : api,\n        api = api + '/cubes/' + cube + '/' + path;\n    return api;\n  };\n\n  var getCached = function(url) {\n    if (!angular.isDefined(cache[url])) {\n      cache[url] = $http.get(url);\n    }\n    return cache[url];\n  };\n\n  var getModel = function(endpoint, cube) {\n    return getCached(getUrl(endpoint, cube, 'model')).then(function(res) {\n      var model = res.data.model;\n      model.refs = {};\n      model.refKeys = {};\n      model.refLabels = {};\n\n      for (var i in model.measures) {\n        var measure = model.measures[i];\n        measure.numeric = true;\n        measure.hideLabel = true;\n        model.refs[measure.ref] = measure;\n      }\n\n      for (var i in model.aggregates) {\n        var agg = model.aggregates[i];\n        agg.numeric = true;\n        agg.hideLabel = true;\n        model.refs[agg.ref] = agg;\n      }\n\n      for (var di in model.dimensions) {\n        var dim = model.dimensions[di];\n        for (var ai in dim.attributes) {\n          var attr = dim.attributes[ai],\n              nested = attr.ref.indexOf('.') != -1;\n          attr.dimension = dim;\n          attr.hideLabel = slugifyFilter(attr.label) == slugifyFilter(dim.label);\n          model.refs[attr.ref] = attr;\n          model.refKeys[attr.ref] = nested ? dim.name + '.' + dim.key_attribute : attr.ref;\n          model.refLabels[attr.ref] = nested ? dim.name + '.' + dim.label_attribute : attr.ref;\n        }\n      }\n      return model;\n    });\n  };\n\n  var getDimensionMembers = function(endpoint, cube, dimension) {\n    return getCached(getUrl(endpoint, cube, 'members/' + dimension));\n  };\n\n  var flush = function() {\n    cache = {};\n  };\n\n  return {\n    getUrl: getUrl,\n    getModel: getModel,\n    getDimensionMembers: getDimensionMembers,\n    flush: flush\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/api.js\n **/","var ngBabbage = angular.module('ngBabbage', ['ngBabbage.templates']);\n\nvar ngBabbageGlobals = ngBabbageGlobals || {};\nngBabbageGlobals.numberFormat = d3.format(\"0,000\");\nngBabbageGlobals.categoryColors = [\n    \"#CF3D1E\", \"#F15623\", \"#F68B1F\", \"#FFC60B\", \"#DFCE21\",\n    \"#BCD631\", \"#95C93D\", \"#48B85C\", \"#00833D\", \"#00B48D\",\n    \"#60C4B1\", \"#27C4F4\", \"#478DCB\", \"#3E67B1\", \"#4251A3\", \"#59449B\",\n    \"#6E3F7C\", \"#6A246D\", \"#8A4873\", \"#EB0080\", \"#EF58A0\", \"#C05A89\"\n    ];\nngBabbageGlobals.colorScale = d3.scale.ordinal().range(ngBabbageGlobals.categoryColors);\n\nif(!ngBabbageGlobals.embedSite) {\n  var url = window.location.href.split('#')[0],\n      lastSlash = url.lastIndexOf('/'),\n      lastSlash = lastSlash == -1 ? url.length : lastSlash;\n  ngBabbageGlobals.embedSite = url.slice(0, lastSlash);\n}\nngBabbageGlobals.embedLink = ngBabbageGlobals.embedSite + '/embed.html';\n\n\nngBabbage.filter('numeric', function() {\n  return function(val) {\n    var fval = parseFloat(val)\n    if (isNaN(fval)) {\n      return '-';\n    }\n    return ngBabbageGlobals.numberFormat(Math.round(fval));\n  };\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/app.js\n **/","\nngBabbage.directive('babbage', ['$http', '$rootScope', '$location', 'babbageApi',\n    function($http, $rootScope, $location, babbageApi) {\n  return {\n    restrict: 'E',\n    transclude: true,\n    scope: {\n      endpoint: '@',\n      cube: '@',\n      state: '=',\n      update: '&'\n    },\n    templateUrl: 'babbage-templates/babbage.html',\n    controller: ['$scope', function($scope) {\n      var self = this;\n      self.queryModel = null;\n\n      self.init = function(queryModel) {\n        self.queryModel = queryModel;\n        self.update();\n      };\n\n      self.update = function() {\n        if (self.queryModel) {\n          babbageApi.getModel($scope.endpoint, $scope.cube).then(function(model) {\n            $scope.$broadcast('babbageUpdate', model, $scope.state);\n          });\n        }\n      }\n\n      self.subscribe = function(listener) {\n        return $scope.$on('babbageUpdate', listener);\n      };\n\n      self.getState = function() {\n        return $scope.state;\n      };\n\n      self.isEmbedded = function() {\n        return $scope.state.embed == 'true';\n      };\n\n      self.setState = function(s) {\n        $scope.state = s;\n        self.update();\n        $scope.update(s);\n      };\n\n      self.getApiUrl = function(endpoint) {\n        return babbageApi.getUrl($scope.endpoint, $scope.cube, endpoint);\n      };\n\n      self.getDimensionMembers = function(dimension) {\n        return babbageApi.getDimensionMembers($scope.endpoint, $scope.cube, dimension);\n      };\n\n      self.size = function(element, height) {\n        if (self.isEmbedded()) {\n            return {\n              width: document.documentElement.clientWidth,\n              height: document.documentElement.clientHeight\n            }\n        }\n        return {\n          width: element.clientWidth,\n          height: height(element.clientWidth, element.clientHeight)\n        }\n      };\n\n      self.getSorts = function() {\n        var sorts = [],\n            order = $scope.state.order || '',\n            order = asArray(order.split(','));\n        for (var i in order) {\n          var parts = order[i].split(':'),\n              sort = {};\n          sort.ref = parts[0];\n          sort.direction = parts[1] || null;\n          if (sort.ref.length) {\n              sorts.push(sort);\n          }\n        }\n        return sorts;\n      };\n\n      self.getSort = function(ref) {\n        var sorts = self.getSorts();\n        for (var i in sorts) {\n          if (sorts[i].ref == ref) {\n            return sorts[i];\n          }\n        }\n        return {ref: ref};\n      };\n\n      self.pushSort = function(ref, direction) {\n        var sorts = self.getSorts().filter(function(s) {\n          return s.ref != ref;\n        });\n        sorts.unshift({ref: ref, direction: direction});\n        $scope.state.order = self.mergeSorts(sorts);\n        self.setState($scope.state);\n      };\n\n      self.removeSorts = function(ref) {\n        var sorts = self.getSorts().filter(function(s) {\n          return s.ref != ref;\n        });\n        return self.mergeSorts(sorts);\n      };\n\n      self.mergeSorts = function(order) {\n        var sorts = [];\n        order = asArray(order);\n        for (var i in order) {\n          var o = order[i];\n          if (angular.isObject(o) && o.ref.length) {\n            o.direction = o.direction || 'asc';\n            o = o.ref + ':' + o.direction;\n            sorts.push(o);\n          }\n        }\n        return sorts.join(',');\n      };\n\n      self.getQuery = function() {\n        var q = {\n          drilldown: [],\n          aggregates: [],\n          cut: $scope.state.cut || [],\n          page: $scope.state.page || 0,\n          pagesize: $scope.state.pagesize || 30,\n          order: self.getSorts()\n        };\n        return q;\n      };\n\n      self.queryParams = function(q) {\n        q.order = self.mergeSorts(q.order);\n\n        // join arguments and remove empty arguments\n        for (var k in q) {\n          if (angular.isArray(q[k])) {\n            if (['order', 'fields'].indexOf(k) != -1) {\n              q[k] = q[k].join(',');\n            } else {\n              q[k] = q[k].join('|');\n            }\n          }\n          q[k] = q[k] + '';\n          if (!q[k].length) {\n            delete q[k];\n          }\n        }\n        return {params: q};\n      }\n    }]\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/babbage.js\n **/","\nngBabbage.directive('babbageChart', ['$rootScope', '$http', function($rootScope, $http) {\n  return {\n    restrict: 'EA',\n    require: '^babbage',\n    scope: {\n      chartType: '@'\n    },\n    templateUrl: 'babbage-templates/chart.html',\n    link: function(scope, element, attrs, babbageCtrl) {\n      scope.queryLoaded = false;\n      scope.cutoffWarning = false;\n      scope.cutoff = 0;\n\n      var getNames = function(model) {\n        var names = {};\n        for (var ref in model.refs) {\n          var concept = model.refs[ref];\n          names[ref] = concept.label || concept.name || ref;\n        }\n        return names;\n      };\n\n      var generateColumns = function(cells, category, grouping, value) {\n        var columns = [[category]], series = {category: 0};\n        for (var i in cells) {\n          var cell = cells[i],\n              field = grouping ? cell[grouping] : value;\n          if (!series[field]) {\n            series[field] = columns.push([field]) - 1;\n          }\n          if (columns[0].indexOf(cell[category]) < 1) {\n            columns[0].push(cell[category]);\n          }\n          var index = columns[0].indexOf(cell[category]);\n          columns[series[field]][index] = cell[value];\n        }\n        var maxLength = Math.max.apply(null, columns.map(function(r) {\n          return r.length;\n        }));\n        for (var i = 1; i < maxLength; i++) {\n          for (var j in columns) {\n            columns[j][i] = columns[j][i] || 0;\n          }\n        }\n        return columns;\n      };\n\n      var query = function(model, state) {\n        var category = asArray(state.category)[0],\n            grouping = asArray(state.grouping)[0],\n            value = asArray(state.value)[0];\n\n        if (!value || !category) return;\n\n        var q = babbageCtrl.getQuery();\n        q.aggregates = [value];\n        q.drilldown = [category];\n        if (grouping) {\n          q.drilldown.push(grouping);\n        }\n\n        var order = [];\n        for (var i in q.order) {\n          var o = q.order[i];\n          if ([value, category].indexOf(o.ref) != -1) {\n            order.push(o);\n          }\n        }\n        if (!order.length) {\n          order = [{ref: value, direction: 'desc'}];\n        }\n        if (grouping && order[0] && order[0].ref != grouping) {\n          order.unshift({ref: grouping, direction: 'asc'});\n        }\n\n        q.order = order;\n        q.page = 0;\n        q.pagesize = 10000;\n\n        var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'),\n                            babbageCtrl.queryParams(q));\n        dfd.then(function(res) {\n          queryResult(res.data, q, model, state, category, grouping, value);\n        });\n      };\n\n      var queryResult = function(data, q, model, state, category, grouping, value) {\n        var wrapper = element.querySelectorAll('.chart-babbage')[0],\n            size = babbageCtrl.size(wrapper, function(w) {\n              return w * 0.6;\n            }),\n            colors = ngBabbageGlobals.colorScale.copy(),\n            columns = generateColumns(data.cells, category, grouping, value),\n            names = getNames(model),\n            groups = [], types = {},\n            chartType = scope.chartType;\n\n        if (grouping && chartType == 'line') {\n          chartType = 'area';\n        }\n\n        for (var i in columns) {\n          if (i > 0) {\n            if (grouping) {\n              key = randomKey();\n              names[key] = columns[i][0];\n              columns[i][0] = key;\n              groups.push(key);\n            } else {\n              groups.push(columns[i][0]);\n            }\n            types[columns[i][0]] = chartType;\n          }\n        }\n\n        d3.select(wrapper)\n          .style(\"width\", size.width + \"px\")\n          .style(\"height\", size.height + \"px\");\n\n        var chart = c3.generate({\n          bindto: wrapper,\n          data: {\n              columns: columns,\n              names: names,\n              color: function(color, d) {\n                var c = d.id || d;\n                if (chartType == 'bar' && !grouping) {\n                  c = d.index;\n                };\n                return colors(c);\n              },\n              order: null,\n              x: category,\n              groups: [groups],\n              types: types\n          },\n          point: {\n            show: false\n          },\n          grid: {\n            focus: {\n              show: false\n            }\n          },\n          axis: {\n              x: {\n                  type: 'category',\n                  tick: {\n                    culling: true,\n                    fit: true\n                  }\n              },\n              y : {\n                 tick: {\n                     format: ngBabbageGlobals.numberFormat,\n                     culling: true,\n                     fit: true\n                 },\n                 lines: [{value:0}]\n             }\n          }\n        });\n\n        scope.queryLoaded = true;\n        scope.cutoffWarning = data.total_cell_count > q.pagesize;\n        scope.cutoff = q.pagesize;\n      };\n\n      var unsubscribe = babbageCtrl.subscribe(function(event, model, state) {\n        query(model, state);\n      });\n      scope.$on('$destroy', unsubscribe);\n\n      var queryModel = {\n        value: {\n          label: 'Value',\n          addLabel: 'set height',\n          types: ['aggregates'],\n          defaults: [],\n          sortId: 1,\n          multiple: false\n        },\n        grouping: {\n          label: 'Grouping (opt)',\n          addLabel: 'select',\n          types: ['attributes'],\n          defaults: [],\n          sortId: 2,\n          remove: true,\n          multiple: false\n        }\n      };\n\n      if (scope.chartType == 'line') {\n        queryModel.category = {\n          label: 'Series',\n          addLabel: 'set series',\n          types: ['attributes'],\n          defaults: [],\n          sortId: 0,\n          multiple: false\n        };\n      }\n\n      if (scope.chartType == 'bar') {\n        queryModel.category = {\n          label: 'Categories',\n          addLabel: 'set bars',\n          types: ['attributes'],\n          defaults: [],\n          sortId: 0,\n          multiple: false\n        };\n      }\n\n      babbageCtrl.init(queryModel);\n    }\n  }\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/chart.js\n **/","var VAL_KEY = '@@@@',\n    POS_KEY = '!@!@'\n\nngBabbage.directive('babbageCrosstab', ['$rootScope', '$http', function($rootScope, $http) {\n  return {\n  restrict: 'EA',\n  require: '^babbage',\n  scope: {\n    drilldown: '='\n  },\n  templateUrl: 'babbage-templates/crosstab.html',\n  link: function(scope, element, attrs, babbageCtrl) {\n    scope.queryLoaded = false;\n    scope.columns = [];\n    scope.rows = [];\n    scope.table = [];\n\n    var query = function(model, state) {\n      state.rows = asArray(state.rows);\n      state.columns = asArray(state.columns);\n      state.aggregates = asArray(state.aggregates);\n      // TODO: handle a case in which both sets contain the same\n      // ref.\n\n      var q = babbageCtrl.getQuery();\n      q.aggregates = q.aggregates.concat(state.aggregates);\n      if (!q.aggregates.length) {\n        q.aggregates = defaultAggregates(model);\n      }\n      q.drilldown = q.drilldown.concat(state.rows);\n      q.drilldown = q.drilldown.concat(state.columns);\n      q.page = 0;\n      q.pagesize = q.pagesize * 10000;\n\n      q.order = asArray(q.order);\n      var drilldowns = state.rows.concat(state.columns),\n          refs = drilldowns.concat(q.aggregates);\n      for (var i in drilldowns) {\n        var dd = drilldowns[i];\n        if (!babbageCtrl.getSort(dd).direction) {\n          if (q.order.indexOf(dd) == -1) {\n            q.order.push({ref: dd});\n          }\n        }\n      }\n      var order = [];\n      for (var i in q.order) {\n        var o = q.order[i];\n        if (refs.indexOf(o.ref) != -1) {\n          order.push(o);\n        }\n      }\n      q.order = order;\n\n      var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'),\n                          babbageCtrl.queryParams(q));\n      dfd.then(function(res) {\n        queryResult(res.data, q, model, state);\n      });\n    };\n\n    var queryResult = function(data, q, model, state) {\n      state.rows = asArray(state.rows);\n      state.columns = asArray(state.columns);\n\n      var aggregates = data.aggregates.map(function(agg) {\n        return model.aggregates[agg];\n      });\n\n      // following code inspired by:\n      // https://github.com/DataBrewery/babbage/blob/master/babbage/formatters.py#L218\n      var matrix = {}, table = [],\n          row_headers = [], column_headers = [],\n          row_keys = [], column_keys = [];\n\n      for (var i in data.cells) {\n        var pickValue = function(k) { return cell[k]; },\n            pickRefs = function(k) { return cell[model.refKeys[k]] + cell[k]; };\n\n        var cell = data.cells[i],\n            row_values = state.rows.map(pickValue),\n            row_set = state.rows.map(pickRefs).join(VAL_KEY),\n            all_column_values = state.columns.map(pickValue),\n            all_column_set = state.columns.map(pickRefs);\n\n        for (var k in aggregates) {\n          var agg = aggregates[k],\n              label = agg.label || agg.name,\n              column_values = all_column_values.concat([label]);\n              column_set = all_column_set.concat([label]).join(VAL_KEY)\n\n          if (row_keys.indexOf(row_set) == -1) {\n            row_keys.push(row_set);\n            row_values.key = row_set;\n            row_headers.push(row_values);\n          }\n\n          if (column_keys.indexOf(column_set) == -1) {\n            column_keys.push(column_set);\n            column_headers.push(column_values);\n          }\n\n          var key = [row_set, column_set].join(POS_KEY);\n          matrix[key] = cell[agg.ref];\n        }\n      }\n\n      for (var i in row_keys) {\n        var row_key = row_keys[i];\n        var row = [];\n        for (var j in column_keys) {\n          var column_key = column_keys[j];\n          var key = [row_key, column_key].join(POS_KEY);\n          row.push(matrix[key] || data.aggregates.map(function(a) { return undefined; }));\n        }\n        table.push(row);\n      }\n\n      scope.rows = row_headers;\n      scope.columns = column_headers;\n      scope.table = table;\n      scope.queryLoaded = true;\n    };\n\n\n    var unsubscribe = babbageCtrl.subscribe(function(event, model, state) {\n      query(model, state);\n    });\n    scope.$on('$destroy', unsubscribe);\n\n    var defaultAggregates = function(model) {\n      var aggs = [];\n      for (var i in model.aggregates) {\n        var agg = model.aggregates[i];\n        aggs.push(agg.ref);\n      }\n      return aggs;\n    };\n\n    // console.log('crosstab init');\n    babbageCtrl.init({\n      columns: {\n        label: 'Columns',\n        addLabel: 'add column',\n        types: ['attributes'],\n        defaults: [],\n        sortId: 0,\n        multiple: true\n      },\n      rows: {\n        label: 'Rows',\n        addLabel: 'add row',\n        types: ['attributes'],\n        defaults: [],\n        sortId: 1,\n        multiple: true\n      },\n      aggregates: {\n        label: 'Values',\n        addLabel: 'add value',\n        types: ['aggregates'],\n        defaults: defaultAggregates,\n        sortId: 2,\n        multiple: true\n      },\n\n    });\n  }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/crosstab.js\n **/","\nngBabbage.directive('babbageFacts', ['$rootScope', '$http', '$q', function($rootScope, $http, $q) {\n  return {\n  restrict: 'EA',\n  require: '^babbage',\n  scope: {\n    drilldown: '='\n  },\n  templateUrl: 'babbage-templates/facts.html',\n  link: function(scope, element, attrs, babbageCtrl) {\n    scope.page = 0;\n    scope.data = [];\n    scope.columns = [];\n    scope.pagerCtx = {};\n    scope.getSort = babbageCtrl.getSort;\n    scope.pushSort = babbageCtrl.pushSort;\n\n    var query = function(model, state) {\n      var q = babbageCtrl.getQuery();\n      q.fields = asArray(state.fields);\n      if (q.fields.length == 0) {\n        q.fields = defaultFields(model);\n      }\n\n      var order = [];\n      for (var i in q.order) {\n        var o = q.order[i];\n        if (q.fields.indexOf(o.ref) != -1) {\n          order.push(o);\n        }\n      }\n      q.order = order;\n\n      var aq = angular.copy(q);\n      aq.drilldown = aq.fields = [];\n      aq.page = 0;\n      var dfd = $http.get(babbageCtrl.getApiUrl('facts'),\n                          babbageCtrl.queryParams(q));\n      dfd.then(function(res) {\n        queryResult(res.data, q, state, model);\n      });\n    };\n\n    var queryResult = function(data, q, state, model) {\n      if (!data.data.length) {\n        scope.columns = [];\n        scope.data = [];\n        scope.pagerCtx = {};\n        return;\n      };\n\n      var columns = [],\n          prev = null,\n          prev_idx = 0;\n\n      for (var i in data.fields) {\n        var ref = data.fields[i],\n            column = model.refs[ref],\n            header = column.dimension ? column.dimension : column;\n\n        if (prev && header.name == prev) {\n          columns[prev_idx].span += 1;\n          column.span = 0;\n        } else {\n          column.span = 1;\n          column.label = column.label || column.name;\n          column.header = header.label || header.name;\n          column.hide = column.hideLabel;\n          prev = header.name;\n          prev_idx = columns.length;\n        }\n        columns.push(column);\n      }\n      scope.columns = columns;\n      scope.data = data.data;\n      scope.pagerCtx = {\n        page: q.page,\n        pagesize: q.pagesize,\n        total: data.total_fact_count\n      }\n    };\n\n    var defaultFields = function(model) {\n      var defaults = [];\n      for (var i in model.measures) {\n        var mea = model.measures[i];\n        defaults.push(mea.ref);\n      }\n      for (var i in model.dimensions) {\n        var dim = model.dimensions[i];\n        for (var k in dim.attributes) {\n          var attr = dim.attributes[k];\n          if (k == dim.label_attribute) {\n            defaults.push(attr.ref);\n          }\n        }\n      }\n      return defaults;\n    };\n\n    var unsubscribe = babbageCtrl.subscribe(function(event, model, state) {\n      query(model, state);\n    });\n    scope.$on('$destroy', unsubscribe);\n\n    // console.log('facts init');\n    babbageCtrl.init({\n      fields: {\n        label: 'Columns',\n        addLabel: 'add column',\n        types: ['attributes', 'measures'],\n        defaults: defaultFields,\n        sortId: 0,\n        multiple: true\n      }\n    });\n  }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/facts.js\n **/","\nngBabbage.directive('babbagePager', ['$timeout', '$location', function ($timeout, $location) {\n  return {\n    restrict: 'E',\n    require: '^babbage',\n    scope: {\n      'context': '='\n    },\n    templateUrl: 'babbage-templates/pager.html',\n    link: function (scope, element, attrs, babbageCtrl) {\n      scope.showPager = false;\n      scope.hasPrev = false;\n      scope.hasNext = false;\n      scope.pages = [];\n      scope.cur = 0;\n      scope.num = 0;\n\n      scope.$watch('context', function(e) {\n        if (!scope.context || scope.context.total <= scope.context.pagesize) {\n          return;\n        }\n        scope.current = parseInt(scope.context.page, 10) || 0;\n        scope.num = Math.ceil(scope.context.total / scope.context.pagesize)\n        var pages = [],\n          num = scope.num,\n          range = 3,\n          low = scope.current - range,\n          high = scope.current + range;\n\n        if (low < 0) {\n          low = 0;\n          high = Math.min((2*range)+1, num);\n        }\n        if (high > num) {\n          high = num;\n          low = Math.max(1, num - (2*range)+1);\n        }\n\n        for (var page = low; page <= high; page++) {\n          // var offset = (page - 1) * scope.context.pagesize;\n          pages.push({\n            page: page,\n            current: page == scope.current,\n            //offset: offset\n          });\n        }\n        scope.hasPrev = scope.current > 0;\n        scope.hasNext = scope.current < num;\n        scope.showPager = num > 1;\n        scope.pages = pages;\n      });\n\n      scope.setPage = function(page) {\n        if (page >= 0 && page <= scope.num) {\n          var state = babbageCtrl.getState();\n          state.page = page;\n          babbageCtrl.setState(state);\n        }\n      }\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/pager.js\n **/","\nngBabbage.directive('babbagePanel', ['$rootScope', 'slugifyFilter', function($rootScope, slugifyFilter) {\n  return {\n    restrict: 'EA',\n    require: '^babbage',\n    scope: {\n    },\n    templateUrl: 'babbage-templates/panel.html',\n    link: function($scope, $element, attrs, babbageCtrl) {\n      var model = null;\n\n      $scope.state = {};\n      $scope.axes = [];\n      $scope.filterAttributes = [];\n      $scope.filters = [];\n      $scope.getSort = babbageCtrl.getSort;\n      $scope.pushSort = babbageCtrl.pushSort;\n      $scope.embedLink = null;\n\n      var update = function() {\n        babbageCtrl.setState($scope.state);\n      };\n\n      $scope.add = function(axis, ref) {\n        if (axis.selected.indexOf(ref) == -1) {\n          if (axis.multiple) {\n            axis.selected.push(ref);\n          } else {\n            if (axis.selected.length) {\n              $scope.state.order = babbageCtrl.removeSorts(axis.selected[0]);\n            }\n            axis.selected = [ref];\n          }\n          $scope.state[axis.name] = axis.selected;\n          update();\n        }\n      };\n\n      $scope.remove = function(axis, ref) {\n        var i = axis.selected.indexOf(ref);\n        if (i != -1) {\n          axis.selected.splice(i, 1);\n          $scope.state[axis.name] = axis.selected;\n          $scope.state.order = babbageCtrl.removeSorts(ref);\n          update();\n        }\n      };\n\n      var makeOptions = function() {\n        var options = [];\n        for (var di in model.dimensions) {\n          var dim = model.dimensions[di];\n          for (var ai in dim.attributes) {\n            var attr = angular.copy(dim.attributes[ai]);\n            attr.dimension = dim;\n            attr.type = 'attributes';\n            if (slugifyFilter(dim.label) != slugifyFilter(attr.label)) {\n              attr.subLabel = '' + attr.label;\n            }\n            attr.sortKey = '0' + dim.label + attr.label;\n            attr.label = dim.label;\n            options.push(attr);\n          }\n        }\n\n        for (var ai in model.aggregates) {\n          var agg = model.aggregates[ai];\n          agg.type = 'aggregates';\n          agg.sortKey = '1' + ai;\n          options.push(agg);\n        }\n\n        for (var mi in model.measures) {\n          var mea = model.measures[mi];\n          mea.type = 'measures';\n          mea.sortKey = '2' + mi;\n          options.push(mea);\n        }\n\n        return options;\n      }\n\n      var sortOptions = function(a, b) {\n        return a.label.localeCompare(b.label);\n      }\n\n      var makeAxes = function(state, options) {\n        var axes = [];\n        if (!babbageCtrl.queryModel) return [];\n\n        for (var name in babbageCtrl.queryModel) {\n          var axis = babbageCtrl.queryModel[name];\n          axis.name = name;\n          if (!angular.isDefined(axis.remove)) {\n            axis.remove = axis.multiple;\n          }\n          axis.sortId = axis.sortId || 1;\n          axis.available = [];\n          axis.active = [];\n\n          axis.selected = asArray(state[name]);\n          if (!axis.selected.length) {\n            if (angular.isFunction(axis.defaults)) {\n              axis.selected = axis.defaults(model);\n            } else {\n              axis.selected = asArray(axis.defaults);\n            }\n          }\n          axis.available = axis.available.sort(sortOptions);\n          axis.active = axis.active.sort(sortOptions);\n\n          for (var i in options) {\n            var opt = options[i];\n            if (axis.selected.indexOf(opt.ref) != -1) {\n              axis.active.push(opt);\n            } else if (axis.types.indexOf(opt.type) != -1) {\n              axis.available.push(opt);\n            }\n          }\n          axes.push(axis);\n        }\n\n        return axes.sort(function(a, b) {\n          return a.sortId - b.sortId;\n        });\n      };\n\n      var makeFilterAttributes = function(options) {\n        var filters = [];\n        for (var i in options) {\n          var opt = options[i];\n          if (opt.type == 'attributes' && opt.dimension.cardinality_class != 'high') {\n            if (opt.dimension.label_ref == opt.ref) {\n              filters.push(opt);\n            }\n          }\n        }\n        return filters.sort(sortOptions);\n      };\n\n      var getAttributeByRef = function(ref) {\n        for (var i in $scope.filterAttributes) {\n          var attr = $scope.filterAttributes[i];\n          if (attr.ref == ref) {\n            return attr;\n          }\n        }\n      };\n\n      var loadFilters = function(state) {\n        var cuts = asArray(state.cut);\n        for (var i in cuts) {\n          var cut = cuts[i];\n          if (cut.indexOf(':') != -1) {\n            var ref = cut.split(':', 1)[0],\n                values = cut.slice(ref.length + 1).split(';');\n            for (var j in values) {\n              $scope.addFilter(getAttributeByRef(ref), values[j]);\n            }\n          }\n        }\n      };\n\n      $scope.addFilter = function(attr, value) {\n        babbageCtrl.getDimensionMembers(attr.ref).then(function(res) {\n          $scope.filters.push({\n            ref: attr.ref,\n            attr: attr,\n            value: value,\n            values: res.data.data.map(function(e) {\n              return e[attr.ref];\n            })\n          });\n        });\n      };\n\n      $scope.removeFilter = function(filter) {\n        var idx = $scope.filters.indexOf(filter);\n        if (idx != -1) {\n          $scope.filters.splice(idx, 1);\n          $scope.updateFilters();\n        }\n      };\n\n      $scope.setFilter = function(filter, item, value) {\n        $scope.updateFilters();\n      };\n\n      $scope.updateFilters = function() {\n        var filters = {};\n        for (var i in $scope.filters) {\n          var f = $scope.filters[i];\n          if (angular.isUndefined(filters[f.ref])) {\n            filters[f.ref] = [];\n          }\n          filters[f.ref].push(f.value);\n        }\n        var cuts = [];\n        for (var ref in filters) {\n          var values = filters[ref],\n              value = values.join(';')\n              cut = ref + ':' + value;\n          cuts.push(cut);\n        }\n        $scope.state.cut = cuts;\n        update();\n      };\n\n      var unsubscribe = babbageCtrl.subscribe(function(event, mdl, state) {\n        model = mdl;\n        $scope.state = state;\n\n        var options = makeOptions();\n        $scope.axes = makeAxes(state, options);\n        $scope.filterAttributes = makeFilterAttributes(options);\n        $scope.filters = [];\n        loadFilters(state);\n\n      });\n      $scope.$on('$destroy', unsubscribe);\n\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/panel.js\n **/","\nngBabbage.directive('babbageSankey', ['$rootScope', '$http', '$document', function($rootScope, $http, $document) {\n  return {\n  restrict: 'EA',\n  require: '^babbage',\n  scope: {\n    drilldown: '='\n  },\n  templateUrl: 'babbage-templates/sankey.html',\n  link: function(scope, element, attrs, babbageCtrl) {\n    var unit = 15,\n        margin = {top: unit / 2, right: 1, bottom: 6, left: 1},\n        svg = null, group = null;\n\n    scope.queryLoaded = false;\n    scope.cutoffWarning = false;\n    scope.cutoff = 0;\n\n    var query = function(model, state) {\n      var source = asArray(state.source)[0],\n          target = asArray(state.target)[0]\n          aggregate = asArray(state.aggregate)[0],\n          aggregate = aggregate ? [aggregate] : defaultAggregate(model);\n\n      var q = babbageCtrl.getQuery();\n      q.aggregates = aggregate;\n      if (!source || !target) {\n        return;\n      }\n      q.drilldown = [source, target];\n\n      q.order = [\n        {\n          ref: aggregate,\n          direction: 'desc'\n        },\n        {\n          ref: source,\n          direction: 'asc'\n        },\n        {\n          ref: target,\n          direction: 'asc'\n        }\n      ];\n      q.page = 0;\n      q.pagesize = 2000;\n\n      scope.queryLoaded = true;\n      scope.cutoffWarning = false;\n      var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'),\n                          babbageCtrl.queryParams(q));\n\n      var wrapper = element.querySelectorAll('.sankey-babbage')[0],\n          size = babbageCtrl.size(wrapper, function(w) { return w * 0.6; });\n\n      unit = Math.max(400, size.height) / 20;\n\n      if (!svg) {\n          svg = d3.select(wrapper).append(\"svg\");\n          group = svg.append(\"g\")\n              .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n      }\n\n      dfd.then(function(res) {\n        queryResult(size, res.data, q, model, state);\n      });\n    };\n\n    var queryResult = function(size, data, q, model, state) {\n      var sourceRef = asArray(state.source)[0],\n          targetRef = asArray(state.target)[0]\n          aggregateRef = asArray(state.aggregate)[0],\n          aggregateRef = aggregateRef ? [aggregateRef] : defaultAggregate(model),\n          size.height = data.cells.length * unit;\n\n      svg.attr(\"height\", size.height + margin.top + margin.bottom);\n      svg.attr(\"width\", size.width);\n\n      var graph = {nodes: [], links: []},\n          objs = {};\n\n      var sourceScale = ngBabbageGlobals.colorScale.copy(),\n          targetScale = d3.scale.ordinal().range(['#ddd', '#ccc', '#eee', '#bbb']);\n\n      data.cells.forEach(function(cell) {\n        var sourceId = cell[sourceRef],\n            targetId = cell[targetRef],\n            link = {\n              //value: Math.sqrt(cell[aggregateRef]),\n              value: cell[aggregateRef],\n              number: ngBabbageGlobals.numberFormat(cell[aggregateRef])\n            };\n\n        if (link.value == 0 || !sourceId || !targetId) {\n          return;\n        }\n        sourceId = 'source-' + sourceRef + sourceId;\n        targetId = 'target-' + targetRef + targetId;\n\n        if (!objs[sourceId]) {\n          var label = cell[model.refLabels[sourceRef]];\n          graph.nodes.push({\n            name: label,\n            color: sourceScale(sourceId)\n          });\n          objs[sourceId] = {idx: graph.nodes.length - 1};\n        }\n        link.source = objs[sourceId].idx;\n\n        if (!objs[targetId]) {\n          var label = cell[model.refLabels[targetRef]];\n          graph.nodes.push({\n            name: label,\n            color: targetScale(targetId)\n          });\n          objs[targetId] = {\n            idx: graph.nodes.length - 1\n          };\n        }\n        link.target = objs[targetId].idx;\n        graph.links.push(link);\n      });\n\n      var sankey = d3.sankey()\n         .nodeWidth(unit)\n         .nodePadding(unit * 0.6)\n         .size([size.width, size.height]);\n\n      var path = sankey.link();\n\n      sankey\n        .nodes(graph.nodes)\n        .links(graph.links)\n        .layout(32);\n\n      group.selectAll('g').remove();\n\n      var link = group.append(\"g\").selectAll(\".link\")\n          .data(graph.links)\n        .enter().append(\"path\")\n          .attr(\"class\", \"link\")\n          .attr(\"d\", path)\n          .style(\"stroke-width\", function(d) {\n            return Math.max(1, d.dy);\n          })\n          .style(\"stroke\", function(d) {\n            return d.source.color;\n          })\n          .sort(function(a, b) { return b.dy - a.dy; });\n\n      link.append(\"title\")\n          .text(function(d) { return d.source.name + \" → \" + d.target.name + \"\\n\" + d.number; });\n\n      var node = group.append(\"g\").selectAll(\".node\")\n          .data(graph.nodes)\n        .enter().append(\"g\")\n          .attr(\"class\", \"node\")\n          .attr(\"transform\", function(d) { return \"translate(\" + d.x + \",\" + d.y + \")\"; });\n\n      node.append(\"rect\")\n          .attr(\"height\", function(d) { return d.dy; })\n          .attr(\"width\", sankey.nodeWidth())\n          .style(\"fill\", function(d) { return d.color; })\n          //.style(\"stroke\", function(d) { return d3.rgb(d.color).darker(1); })\n          .style(\"stroke\", function(d) { return d.color; })\n        .append(\"title\")\n          .text(function(d) { return d.name });\n\n      node.append(\"text\")\n          .attr(\"x\", -6)\n          .attr(\"y\", function(d) { return d.dy / 2; })\n          .attr(\"dy\", \".35em\")\n          .attr(\"text-anchor\", \"end\")\n          .attr(\"transform\", null)\n          .text(function(d) { return d.name; })\n        .filter(function(d) { return d.x < size.width / 2; })\n          .attr(\"x\", 6 + sankey.nodeWidth())\n          .attr(\"text-anchor\", \"start\");\n\n      scope.cutoffWarning = data.total_cell_count > q.pagesize;\n      scope.cutoff = q.pagesize;\n    };\n\n    var unsubscribe = babbageCtrl.subscribe(function(event, model, state) {\n      query(model, state);\n    });\n    scope.$on('$destroy', unsubscribe);\n\n    var defaultAggregate = function(model) {\n      for (var i in model.aggregates) {\n        var agg = model.aggregates[i];\n        if (agg.measure) {\n          return [agg.ref];\n        }\n      }\n      return [];\n    };\n\n    babbageCtrl.init({\n      source: {\n        label: 'Source',\n        addLabel: 'set left side',\n        types: ['attributes'],\n        defaults: [],\n        sortId: 0,\n        multiple: false\n      },\n      target: {\n        label: 'Target',\n        addLabel: 'set right side',\n        types: ['attributes'],\n        defaults: [],\n        sortId: 1,\n        multiple: false\n      },\n      aggregate: {\n        label: 'Width',\n        addLabel: 'set width',\n        types: ['aggregates'],\n        defaults: defaultAggregate,\n        sortId: 2,\n        multiple: false\n      },\n\n    });\n  }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/sankey.js\n **/","\nngBabbage.directive('babbageTreemap', ['$rootScope', '$http', '$document', function($rootScope, $http, $document) {\n  return {\n  restrict: 'EA',\n  require: '^babbage',\n  scope: {\n    drilldown: '='\n  },\n  templateUrl: 'babbage-templates/treemap.html',\n  link: function(scope, element, attrs, babbageCtrl) {\n    var treemap = null,\n        div = null;\n\n    scope.queryLoaded = false;\n    scope.cutoffWarning = false;\n\n    var query = function(model, state) {\n      var tile = asArray(state.tile)[0],\n          area = asArray(state.area)[0],\n          area = area ? [area] : defaultArea(model);\n\n      var q = babbageCtrl.getQuery();\n      q.aggregates = area;\n      if (!tile) {\n        return;\n      }\n      q.drilldown = [tile];\n\n      var order = [];\n      for (var i in q.order) {\n        var o = q.order[i];\n        if ([tile, area].indexOf(o.ref) != -1) {\n          order.push(o);\n        }\n      }\n      if (!order.length) {\n        order = [{ref: area, direction: 'desc'}];\n      }\n\n      q.order = order;\n      q.page = 0;\n      q.pagesize = 50;\n\n      scope.cutoffWarning = false;\n      scope.queryLoaded = true;\n      var dfd = $http.get(babbageCtrl.getApiUrl('aggregate'),\n                          babbageCtrl.queryParams(q));\n\n      var wrapper = element.querySelectorAll('.treemap-babbage')[0],\n          size = babbageCtrl.size(wrapper, function(w) { return w * 0.6; });\n\n      treemap = d3.layout.treemap()\n        .size([size.width, size.height])\n        .sticky(true)\n        .sort(function(a, b) { return a[area] - b[area]; })\n        .value(function(d) { return d[area]; });\n\n      d3.select(wrapper).select(\"div\").remove();\n      div = d3.select(wrapper).append(\"div\")\n        .style(\"position\", \"relative\")\n        .style(\"width\", size.width + \"px\")\n        .style(\"height\", size.height + \"px\");\n\n      dfd.then(function(res) {\n        queryResult(res.data, q, model, state);\n      });\n    };\n\n    var queryResult = function(data, q, model, state) {\n      var tileRef = asArray(state.tile)[0],\n          areaRef = asArray(state.area)[0],\n          areaRef = areaRef ? [areaRef] : defaultArea(model);\n\n      var root = {\n        children: []\n      };\n\n      for (var i in data.cells) {\n        var cell = data.cells[i];\n        cell._area_fmt = ngBabbageGlobals.numberFormat(Math.round(cell[areaRef]));\n        cell._name = cell[tileRef];\n        cell._color = ngBabbageGlobals.colorScale(i);\n        cell._percentage = cell[areaRef] / Math.max(data.summary[areaRef], 1);\n        root.children.push(cell);\n      };\n\n      var node = div.datum(root).selectAll(\".node\")\n          .data(treemap.nodes)\n        .enter().append(\"a\")\n          .attr(\"href\", function(d){ return d.href; })\n          .attr(\"class\", \"node\")\n          .call(positionNode)\n          .style(\"background\", '#fff')\n          .html(function(d) {\n            if (d._percentage < 0.02) {\n              return '';\n            }\n            return d.children ? null : '<span class=\"amount\">' + d._area_fmt + '</span>' + d._name;\n          })\n          .on(\"mouseover\", function(d) {\n            d3.select(this).transition().duration(200)\n              .style({'background': d3.rgb(d._color).darker() });\n          })\n          .on(\"mouseout\", function(d) {\n            d3.select(this).transition().duration(500)\n              .style({'background': d._color});\n          })\n          .transition()\n          .duration(500)\n          .delay(function(d, i) { return Math.min(i * 30, 1500); })\n          .style(\"background\", function(d) { return d._color; });\n\n      scope.cutoffWarning = data.total_cell_count > q.pagesize;\n      scope.cutoff = q.pagesize;\n    };\n\n    function positionNode() {\n      this.style(\"left\", function(d) { return d.x + \"px\"; })\n          .style(\"top\", function(d) { return d.y + \"px\"; })\n          .style(\"width\", function(d) { return Math.max(0, d.dx - 1) + \"px\"; })\n          .style(\"height\", function(d) { return Math.max(0, d.dy - 1) + \"px\"; });\n    };\n\n\n    var unsubscribe = babbageCtrl.subscribe(function(event, model, state) {\n      query(model, state);\n    });\n    scope.$on('$destroy', unsubscribe);\n\n    var defaultArea = function(model) {\n      for (var i in model.aggregates) {\n        var agg = model.aggregates[i];\n        if (agg.measure) {\n          return [agg.ref];\n        }\n      }\n      return [];\n    };\n\n    babbageCtrl.init({\n      tile: {\n        label: 'Tiles',\n        addLabel: 'set breakdown',\n        types: ['attributes'],\n        defaults: [],\n        sortId: 0,\n        multiple: false\n      },\n      area: {\n        label: 'Area',\n        addLabel: 'set area',\n        types: ['aggregates'],\n        defaults: defaultArea,\n        sortId: 1,\n        multiple: false\n      },\n    });\n  }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/treemap.js\n **/","\nfunction asArray(obj) {\n  objs = obj ? obj : [];\n  return angular.isArray(objs) ? objs : [objs];\n}\n\nfunction randomKey() {\n  return 'X' + Math.random().toString(36).substring(7);\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n// suggested polyfill for safari & IE\nif (!String.prototype.endsWith) {\n  String.prototype.endsWith = function(searchString, position) {\n      var subjectString = this.toString();\n      if (position === undefined || position > subjectString.length) {\n        position = subjectString.length;\n      }\n      position -= searchString.length;\n      var lastIndex = subjectString.indexOf(searchString, position);\n      return lastIndex !== -1 && lastIndex === position;\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/util.js\n **/","\nngBabbage.directive('babbageWorkspace', ['$location', function($location) {\n  return {\n    restrict: 'EA',\n    scope: {\n      endpoint: '@',\n      cube: '@'\n    },\n    templateUrl: 'babbage-templates/workspace.html',\n    link: function(scope, element, attrs) {\n      scope.state = null;\n      scope.embedLink = null;\n\n      scope.setView = function(view) {\n        scope.view = view;\n        scope.state.view = view;\n        scope.update(scope.state);\n      };\n\n      scope.update = function(state) {\n        scope.state = state;\n        scope.view = scope.state.view || 'facts';\n        $location.search(state);\n        prepareEmbed();\n      };\n\n      var prepareEmbed = function() {\n        var qs = [],\n            opts = angular.extend({}, $location.search(), {\n              view: scope.view,\n              endpoint: scope.endpoint,\n              cube: scope.cube,\n              embed: true\n            });\n        for (var name in opts) {\n          var values = asArray(opts[name]);\n          for (var i in values) {\n            var val = encodeURIComponent(values[i]);\n            qs.push(name + '=' + val);\n          }\n        }\n        scope.embedLink = ngBabbageGlobals.embedLink + '#/?' + qs.join('&');\n      };\n\n      scope.update($location.search());\n    }\n  };\n}]);\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/workspace.js\n **/"],"sourceRoot":""}